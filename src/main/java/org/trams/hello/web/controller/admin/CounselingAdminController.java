/*
 * Created on 25 thg 1 2017 ( Time 13:43:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.Calendar;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
//--- Entities
import org.trams.hello.bean.CounselingSession;
import org.trams.hello.bean.PageCustom;
import org.trams.hello.bean.jpa.BusinessEntity;
import org.trams.hello.bean.jpa.CounselingSessionEntity;
import org.trams.hello.bean.jpa.ReservationEntity;
import org.trams.hello.bean.jpa.UserQuestionaireEntity;
import org.trams.hello.business.service.BusinessService;
//--- Services 
import org.trams.hello.business.service.CounselingSessionService;
import org.trams.hello.business.service.CounselorService;
import org.trams.hello.business.service.PaymentHistoryService;
import org.trams.hello.business.service.UserQuestionaireService;
import org.trams.hello.business.service.UserService;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.Pager;
import org.trams.hello.web.common.utils.DataUtils;

/**
 * Spring MVC controller for 'CounselingSession' management.
 */
@Controller
@RequestMapping("/admin/operation/counseling")
public class CounselingAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "counselingSession";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "counseling";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "admin/operation/counseling/create";
	private static final String JSP_LIST   = "admin/operation/counseling/list";
	private static final String JSP_EDIT   = "admin/operation/counseling/edit";
	private static final String JSP_DETAIL   = "admin/operation/counseling/detail";

	//--- Main entity service
	@Resource
    private CounselingSessionService counselingSessionService; // Injected by Spring
	//--- Other service(s)
	@Resource
    private PaymentHistoryService paymentHistoryService; // Injected by Spring
	@Resource
    private UserService userService; // Injected by Spring
	@Resource
    private UserQuestionaireService userQuestionaireService; // Injected by Spring
	@Resource
    private CounselorService counselorService; // Injected by Spring
	@Resource
    private BusinessService businessService;
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public CounselingAdminController() {
		super(CounselingAdminController.class, MAIN_ENTITY_NAME );
		log("ReservationAdminController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type",defaultValue="") String type,
			@RequestParam(value="key",defaultValue="") String key,
			@RequestParam(value="startTime",defaultValue="") String startTime,
			@RequestParam(value="endTime",defaultValue="") String endTime,
			@RequestParam(value="userType",defaultValue="") Short[] userType,
			@RequestParam(value="businessId",defaultValue="0") Integer businessId,
			@RequestParam(value="yearContract",defaultValue="0") Integer yearContract,
			@RequestParam(value="subBusineesId",defaultValue="0") Integer subBusineesId,
			@RequestParam(value="status",defaultValue="") Short[] status,
			@RequestParam(value="paymentType",defaultValue="") Short[] paymentType,
			@RequestParam(value="orderBy",defaultValue="createDate") String orderBy,
			HttpServletRequest request,
			HttpSession session,
			Model model) {
		try {
		
		Page<BusinessEntity> list_bussiness = businessService.listPagingBy_ParentBusinessId(0, 1, Integer.MAX_VALUE);
		if(list_bussiness.getContent() != null){
			model.addAttribute("list_bussiness", list_bussiness.getContent());
		}
		PageCustom<ReservationEntity> listPage = counselingSessionService.filterCounseling(startTime, endTime, userType, businessId, yearContract, subBusineesId, 
				 status, paymentType, type, key, orderBy, page, PAGE_SIZE);
		Calendar c = Calendar.getInstance();
		model.addAttribute("type", type);
		model.addAttribute("startTime", startTime);
		model.addAttribute("key", key);
		model.addAttribute("endTime", endTime);
		model.addAttribute("userType", userType);
		model.addAttribute("businessId", businessId);
		model.addAttribute("yearContract", yearContract);
		model.addAttribute("subBusineesId", subBusineesId);
		model.addAttribute("status", status);
		model.addAttribute("paymentType", paymentType);
		model.addAttribute("listPage", listPage);
		model.addAttribute("yearNow", c.get(Calendar.YEAR));
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("pagination_navigator", "/admin/operation/counseling/list");
		new Pager<ReservationEntity>(listPage).setManualSetting(model, request);
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		return JSP_LIST;
	}

	
	@RequestMapping(value = "/detail/{id}", method = RequestMethod.GET)
	public String detail(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id) {
		CounselingSessionEntity counselingSession = counselingSessionService.findOne(id);
//		if(counselingSession.getEntryCounselorTime() != null || counselingSession.getEntryUserTime() != null){
//			if(counselingSession.getEntryCounselorTime().getTime() > counselingSession.getEntryUserTime().getTime()){
//				model.addAttribute("startCounselor", counselingSession.getEntryCounselorTime().getTime());
//			}else{
//				model.addAttribute("startCounselor", counselingSession.getEntryUserTime().getTime());
//			}
//		}
//		
//		if(counselingSession.getEntryCounselorTime() != null || counselingSession.getEntryUserTime() != null){
//			if(counselingSession.getExitCounselorTime().getTime() > counselingSession.getExitUserTime().getTime()){
//				model.addAttribute("endCounselor", counselingSession.getExitUserTime().getTime());
//			}else{
//				model.addAttribute("endCounselor", counselingSession.getExitCounselorTime().getTime());
//			}
//		}
		UserQuestionaireEntity up = userQuestionaireService.getStatisficEvolutionBy_CounselingSessionId(id);
		model.addAttribute("uq",up);
		model.addAttribute("item", counselingSession);
		return JSP_DETAIL;
	}
	
	@RequestMapping(value = "/detail/{id}", method = RequestMethod.POST)
	public String detail_post(
	Model model, 
	HttpSession session,
	@RequestParam(value="refund", defaultValue="0") Integer refund,
	@PathVariable("id") Integer id) {
		if(refund > 0){
			CounselingSession cs = counselingSessionService.findById(id);
			cs.setStatus((short)3);
			cs.setRefundDate(new Date());
			counselingSessionService.update(cs);
		}
		return "redirect:/"+ JSP_DETAIL+"/"+id;
	}
	


}
