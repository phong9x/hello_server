/*
 * Created on 25 May 2017 ( Time 11:29:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.CounselingCenter;
import org.trams.hello.bean.Counselor;
import org.trams.hello.bean.PaymentProfitData;
import org.trams.hello.bean.api.CounselorProfitProcess;
import org.trams.hello.bean.jpa.CounselingCenterEntity;
import org.trams.hello.bean.jpa.CounselorEntity;
import org.trams.hello.business.service.CounselingCenterService;
import org.trams.hello.business.service.CounselingSessionService;
import org.trams.hello.business.service.CounselorService;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;
import org.trams.hello.web.common.Pager;

/**
 * Spring MVC controller for 'PaymentProfit' management.
 */
@Controller
@RequestMapping("/admin/profit/ratio")
public class ProfitRatioAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "paymentProfit";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "profit";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_COUNSELOR_LIST   = "admin/profit/ratio/counselor";
	private static final String JSP_COUNSELOR_CENTER_LIST   = "admin/profit/ratio/counselorCenter";
	//--- Main entity service
	
	@Resource
    private CounselingSessionService counselingSessionService;
	
	@Resource
    private CounselingCenterService counselingCenterService;
	
	@Resource
    private CounselorService counselorService;

	
	
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public ProfitRatioAdminController() {
		super(ProfitRatioAdminController.class, MAIN_ENTITY_NAME );
		log("PaymentProfitAdminController created.");
	}

	@RequestMapping(value = "/counselor", method = RequestMethod.GET)
	public String counselor_get(
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		Page<CounselorEntity> listPage = counselorService.listPagingCounselorNormal(1, Integer.MAX_VALUE);
		model.addAttribute("percent", ApplicationDefine.COUNSELOR_PROFIT_PERCENT_DEFAULT);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		new Pager<CounselorEntity>(listPage).setSetting(model, request);
		return JSP_COUNSELOR_LIST;
	}
	
	@RequestMapping(value = "/counselor", method = RequestMethod.POST)
	public String counselor_post(
			@ModelAttribute CounselorProfitProcess c,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		List<PaymentProfitData> list = c.getProfit();
		for (PaymentProfitData i : list) {
			if(i.getType() != null){
				Counselor councelor = counselorService.findById(i.getUserId());
				councelor.setProfitPercent(i.getPercent());
				counselorService.update(councelor);
			}
		}
		model.addAttribute("percent", "85");
		return "redirect:/"+JSP_COUNSELOR_LIST;
	}
	
	@RequestMapping(value = "/counselorCenter", method = RequestMethod.GET)
	public String counselorCenterGet(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="year", defaultValue = "") Integer year,
			@RequestParam(value="month", defaultValue= "") Integer month,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		Page<CounselingCenterEntity> listPage = counselingCenterService.listPaging(page, Integer.MAX_VALUE);
		model.addAttribute("percent", ApplicationDefine.COUNSELOR_CENTER_PROFIT_PERCENT_DEFAULT);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		new Pager<CounselingCenterEntity>(listPage).setSetting(model, request);
		return JSP_COUNSELOR_CENTER_LIST;
	}
	
	@RequestMapping(value = "/counselorCenter", method = RequestMethod.POST)
	public String counselorCenterPost(
			@ModelAttribute CounselorProfitProcess c,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		List<PaymentProfitData> list = c.getProfit();
		for (PaymentProfitData i : list) {
			if(i.getType() != null){
				CounselingCenter center = counselingCenterService.findById(i.getUserId());
				center.setProfitPercent(i.getPercent());
				counselingCenterService.update(center);
			}
		}
		return "redirect:/"+ JSP_COUNSELOR_CENTER_LIST;
	}
	
}
