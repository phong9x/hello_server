/*
 * Created on 12 May 2017 ( Time 10:13:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.text.ParseException;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
//--- Entities
import org.trams.hello.bean.Faq;
import org.trams.hello.bean.PageCustom;
import org.trams.hello.bean.User;
import org.trams.hello.bean.UserItem;
import org.trams.hello.bean.jpa.FaqEntity;
//--- Services 
import org.trams.hello.business.service.FaqService;
import org.trams.hello.business.service.UserService;
import org.trams.hello.business.service.mapping.FaqServiceMapper;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.Login;
import org.trams.hello.web.common.Pager;

/**
 * Spring MVC controller for 'Faq' management.
 */
@Controller
@RequestMapping("/admin/cs/faq")
public class FaqAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "faq";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "faq";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "admin/cs/faq/create";
	private static final String JSP_LIST   = "admin/cs/faq/list";
	private static final String JSP_EDIT   = "admin/cs/faq/edit";
//	private static final String JSP_DETAIL   = "admin/cs/faq/detail";

	//--- Main entity service
	@Resource
    private FaqService faqService; // Injected by Spring
	@Resource
    private UserService userService; // Injected by Spring
	@Resource
    private FaqServiceMapper faqServiceMapper;

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public FaqAdminController() {
		super(FaqAdminController.class, MAIN_ENTITY_NAME );
		log("FaqAdminController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type_search",defaultValue="title") String type_search,
			@RequestParam(value="type",defaultValue="1") Integer type,
			@RequestParam(value="keyword",defaultValue="") String key,
			HttpSession session,
			HttpServletRequest request,
			Model model) throws ParseException {
		if(key==null){
			key="";
		}
		
		PageCustom<FaqEntity> listPage = faqService.faqs(type_search, type, key, page, PAGE_SIZE);
		
		model.addAttribute(MAIN_LIST_NAME, listPage);
		model.addAttribute("type_search", type_search);
		model.addAttribute("list", listPage.getList());
		model.addAttribute("keyword", key);
		model.addAttribute("page", page);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("totalCount", listPage.getTotalCount());
		model.addAttribute("pagination_navigator", "/admin/cs/faq/list");
		new Pager<FaqEntity>(listPage).setManualSetting(model, request);
		return JSP_LIST;
	}

	
	@RequestMapping("/type/{type}/detail/{id}")
	public String detail(Model model, HttpSession session, @PathVariable("id") Integer id, @PathVariable(value="type") Integer type) {
		if (type == 1) {
			FaqEntity faq = faqService.findByUserId(id);
			model.addAttribute("faq", faq);
			model.addAttribute("osType", faq.getOsDisplay());
		} else {
			List<Faq> list = faqService.listInAdmin((short) 2);
			model.addAttribute("list", list);
			model.addAttribute("totalList", faqService.findFaqIdMax((short) 2));
			model.addAttribute("firstIndex", list.get(0).getId());
			model.addAttribute("endIndex", list.get(list.size() - 1).getId());
		}
		UserItem userItem = Login.getAdminLogin(session);
		model.addAttribute("type", type);
		model.addAttribute("adminId", userItem.getId());
		return JSP_EDIT;
	}

	@RequestMapping(value = "/type/{type}/create", method = RequestMethod.GET)
	public String create(HttpSession session, Model model, @PathVariable(value="type") Integer type) {
		log("Action 'create'");
		UserItem userItem = Login.getAdminLogin(session);
		model.addAttribute("type", type);
		User user = userService.findById(userItem.getId());
		model.addAttribute("admin", user);
		model.addAttribute("activePage", nav);
		return JSP_CREATE;
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST)
	public String create(HttpSession session, @ModelAttribute Faq faq, Model model) {
		log("Action 'create'");

		try {
			faq.setCreateDate(new Date());
			faq.setUpdateDate(new Date());
			faqService.create(faq);
			return "redirect:/" + JSP_LIST;
		} catch (Exception e) {
			e.printStackTrace();
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/edit/{id}", method = RequestMethod.GET)
	public String update(HttpSession session, @PathVariable("id") Integer id, Model model) {
		Faq faq = faqService.findById(id);
		try {
			model.addAttribute("item", faq);
			model.addAttribute("activePage", nav);
			return JSP_EDIT;
		} catch (Exception e) {
			return JSP_LIST;
		}
	}

	@RequestMapping(value = "/edit/{id}", method = RequestMethod.POST)
	public String update(@RequestParam(value = "edit", defaultValue = "0") Integer edit, @ModelAttribute Faq item,
			HttpSession session, @PathVariable("id") Integer id, Model model) {
		Faq faq = faqService.findById(id);
		try {
			faq.setTitle(item.getTitle());
			faq.setContent(item.getContent());
			faq.setViewCount(item.getViewCount());
			faq.setOsDisplay(item.getOsDisplay());
			faq.setIsShow(item.getIsShow());
			faq.setType(item.getType());
			faq.setUpdateDate(new Date());
			faq = faqService.update(faq);
			model.addAttribute("item", faq);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/" + JSP_EDIT + "/" + id;
	}

	@RequestMapping(value = "/delete/{id}")
	public String delete(Model model, HttpSession session, @PathVariable("id") Integer id) {

		faqService.delete(id);
		return "redirect:/" + JSP_LIST;
	}

}
