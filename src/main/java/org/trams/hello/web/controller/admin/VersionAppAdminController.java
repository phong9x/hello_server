/*
 * Created on 13 Mar 2017 ( Time 14:38:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
//--- Entities
import org.trams.hello.bean.VersionApp;
import org.trams.hello.bean.jpa.VersionAppEntity;
//--- Services 
import org.trams.hello.business.service.VersionAppService;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.Pager;

/**
 * Spring MVC controller for 'VersionApp' management.
 */
@Controller
@RequestMapping("/admin/operation/versionApp")
public class VersionAppAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "versionApp";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "versionApp";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "admin/operation/versionApp/create";
	private static final String JSP_LIST   = "admin/operation/versionApp/list";
	private static final String JSP_EDIT   = "admin/operation/versionApp/edit";
	private static final String JSP_DETAIL   = "admin/operation/versionApp/detail";

	//--- Main entity service
	@Resource
    private VersionAppService versionAppService; // Injected by Spring
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public VersionAppAdminController() {
		super(VersionAppAdminController.class, MAIN_ENTITY_NAME );
		log("VersionAppAdminController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="os",defaultValue="1") Short os,
			@RequestParam(value="minor",defaultValue="0") Integer minor,
			@RequestParam(value="major",defaultValue="0") Integer major,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		if(minor > 0){
			VersionApp v = versionAppService.findById(minor);
			v.setType((short)1);
			versionAppService.update(v);
		}
		if(major > 0){
			VersionApp v = versionAppService.findById(major);
			v.setType((short)2);
			versionAppService.update(v);
		}
		Page<VersionAppEntity> listPage = null;
		listPage=versionAppService.listPagingBy_Os(os, page, PAGE_SIZE);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("activePage", nav);
		model.addAttribute("os", os);
		model.addAttribute("pagination_navigator", "/admin/versionApp/list");
		new Pager<VersionAppEntity>(listPage).setSetting(model,request);		
		return JSP_LIST;
	}

	
	@RequestMapping("/detail/{id}")
	public String detail(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id) {
		
			
		VersionApp versionApp = versionAppService.findById(id);
		model.addAttribute("versionApp", versionApp);
		return JSP_DETAIL;
	}
	@RequestMapping(value = "/create", method = RequestMethod.GET ) 
	public String create(
			HttpSession session,
			Model model) {
		log("Action 'create'");
		model.addAttribute("now",new Date());
		model.addAttribute("activePage", nav);
		return JSP_CREATE;
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST ) 
	public String create(
			HttpSession session,
			@ModelAttribute VersionApp versionApp,
			Model model) {
		log("Action 'create'");
		try {
			versionApp.setType((short)0);
			versionApp.setCreateDate( new Date() );
			versionApp.setUpdateDate( new Date() );
			versionAppService.create(versionApp);
			return "redirect:/"+JSP_LIST+"?os="+versionApp.getOs();
		} catch(Exception e) {
			e.printStackTrace();
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/edit/{id}", method = RequestMethod.GET)
	public String update(
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
		VersionApp versionApp = versionAppService.findById(id);
		try {
			model.addAttribute("item", versionApp);
			model.addAttribute("activePage", nav);
			return JSP_EDIT;
		} catch(Exception e) {
			return JSP_LIST;
		}
	}
	
	@RequestMapping(value = "/edit/{id}", method = RequestMethod.POST)
	public String update(
	@RequestParam(value="edit",defaultValue="0") Integer edit,
	@ModelAttribute VersionApp item,
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
		VersionApp versionApp = versionAppService.findById(id);
		try {
			versionApp.setVersionName( item.getVersionName() );
			versionApp.setType( item.getType() );
			versionApp.setUpdateDate( new Date() );
			versionApp = versionAppService.update(versionApp);
			model.addAttribute("item", versionApp);
		} catch(Exception e) {
			e.printStackTrace();
		}
		return "redirect:/"+JSP_EDIT+"/"+id;
	}
	
	

	@RequestMapping(value = "/delete/{id}")
	public String delete(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id ) {
	
			
	versionAppService.delete(id);
	return "redirect:/"+JSP_LIST;
	}

}
