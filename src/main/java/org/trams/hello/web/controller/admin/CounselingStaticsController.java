/*
 * Created on 13 Mar 2017 ( Time 14:38:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.CounselingStatistics;
import org.trams.hello.bean.LoginStatistics;
import org.trams.hello.bean.PageCustom;
import org.trams.hello.business.service.CounselingSessionService;
import org.trams.hello.web.bean.search.SearchStatistics;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;
import org.trams.hello.web.common.Pager;
import org.trams.hello.web.common.utils.DataUtils;
import org.trams.hello.web.common.utils.ExcelUtils;

/**
 * Spring MVC controller for 'VersionApp' management.
 */
@Controller
@RequestMapping("/admin/statistics/counseling")
public class CounselingStaticsController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "versionApp";
	
	private static final Integer PAGE_SIZE   = 30;

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_PERIOD   = "admin/statistics/counseling/period";
	private static final String JSP_WEEK   = "admin/statistics/counseling/week";
	private static final String JSP_HOUR  = "admin/statistics/counseling/hour";
	private static final String JSP_MEMBER  = "admin/statistics/counseling/member";
	
	//--- Main entity service
	@Resource
    private CounselingSessionService counselingSessionService;
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public CounselingStaticsController() {
		super(CounselingStaticsController.class, MAIN_ENTITY_NAME );
		log("VersionAppAdminController created.");
	}
	
	@RequestMapping("/period")
	public String user_chart(
			HttpSession session,
			HttpServletRequest request,
			@RequestParam(value="page",defaultValue="1") Integer page,
			@ModelAttribute SearchStatistics s,
			Model model) {
		Date now = new Date();
		
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatistics(s, page, Integer.MAX_VALUE);
		model.addAttribute("now", now);
		model.addAttribute("s", s);
		model.addAttribute("total", listPage.getOther());
		new Pager<CounselingStatistics>(listPage).setManualSetting(model, request);
		return JSP_PERIOD;
	}
	
	@RequestMapping("/period/download")
	public void period_download(
			HttpSession session,
			HttpServletRequest request,
			@ModelAttribute SearchStatistics s,
			HttpServletResponse response,
			Model model) {
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatistics(s, 1, Integer.MAX_VALUE);
		List<Object> listOther = listPage.getOther();
		System.out.println("size:"+listPage.getList().size());
		try {
			List<Object> header = new ArrayList<>();
			header.add(listOther.get(0).toString());
			header.add(listOther.get(1).toString());
			
			List<List<Object>> list_data = null;
			if (listPage.getList() != null) {
				list_data = new ArrayList<>();
				for (CounselingStatistics i : listPage.getList()) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(i.getTitle());
					list_str.add(i.getTotalReservation());
					list_str.add(i.getTotalCounseling());
					list_data.add(list_str);
				}
			}
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response, ApplicationDefine.ExcelTemplate.COUNSELING_STATISTIC, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/week")
	public String week(
			HttpSession session,
			HttpServletRequest request,
			@RequestParam(value="page",defaultValue="1") Integer page,
			@ModelAttribute SearchStatistics s,
			Model model) {
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatisticsByWeek(s);
		model.addAttribute("s", s);
		model.addAttribute("total", listPage.getOther());
		new Pager<CounselingStatistics>(listPage).setManualSetting(model, request);
		return JSP_WEEK;
	}
	
	@RequestMapping("/week/download")
	public void week_download(
			HttpSession session,
			HttpServletRequest request,
			@ModelAttribute SearchStatistics s,
			HttpServletResponse response,
			Model model) {
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatisticsByWeek(s);
		List<Object> listOther = listPage.getOther();
		System.out.println("size:"+listPage.getList().size());
		try {
			List<Object> header = new ArrayList<>();
			header.add(listOther.get(0).toString());
			header.add(listOther.get(1).toString());
			
			List<List<Object>> list_data = null;
			if (listPage.getList() != null) {
				list_data = new ArrayList<>();
				for (CounselingStatistics i : listPage.getList()) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(i.getTitle());
					list_str.add(i.getTotalReservation());
					list_str.add(i.getTotalCounseling());
					list_data.add(list_str);
				}
			}
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response, ApplicationDefine.ExcelTemplate.COUNSELING_STATISTIC, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/hour")
	public String hour(
			HttpSession session,
			HttpServletRequest request,
			@RequestParam(value="page",defaultValue="1") Integer page,
			@ModelAttribute SearchStatistics s,
			Model model) {
		
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatisticsByHour(s);
		model.addAttribute("s", s);
		model.addAttribute("total", listPage.getOther());
		new Pager<CounselingStatistics>(listPage).setManualSetting(model, request);
		return JSP_HOUR;
	}
	
	@RequestMapping("/hour/download")
	public void hour_download(
			HttpSession session,
			HttpServletRequest request,
			@ModelAttribute SearchStatistics s,
			HttpServletResponse response,
			Model model) {
		PageCustom<CounselingStatistics> listPage = counselingSessionService.filterStatisticsByHour(s);
		List<Object> listOther = listPage.getOther();
		System.out.println("size:"+listPage.getList().size());
		try {
			List<Object> header = new ArrayList<>();
			header.add(listOther.get(0).toString());
			header.add(listOther.get(1).toString());
			
			List<List<Object>> list_data = null;
			if (listPage.getList() != null) {
				list_data = new ArrayList<>();
				for (CounselingStatistics i : listPage.getList()) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(i.getTitle());
					list_str.add(i.getTotalReservation());
					list_str.add(i.getTotalCounseling());
					list_data.add(list_str);
				}
			}
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response, ApplicationDefine.ExcelTemplate.COUNSELING_STATISTIC, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/member")
	public String member(
			HttpSession session,
			HttpServletRequest request,
			@RequestParam(value="page",defaultValue="1") Integer page,
			@ModelAttribute SearchStatistics s,
			Model model) {
		
		PageCustom<LoginStatistics> listPage = counselingSessionService.filterStatisticsByMember(s);
		model.addAttribute("s", s);
		model.addAttribute("total", listPage.getOther());
		new Pager<LoginStatistics>(listPage).setManualSetting(model, request);
		return JSP_MEMBER;
	}

	@RequestMapping("/member/download")
	public void counselor_chart_download(
			HttpSession session,
			HttpServletRequest request,
			@ModelAttribute SearchStatistics s,
			HttpServletResponse response,
			Model model) {
		PageCustom<LoginStatistics> listPage = counselingSessionService.filterStatisticsByMember(s);
		List<Object> listOther = listPage.getOther();
		System.out.println("size:"+listPage.getList().size());
		try {
			List<Object> header = new ArrayList<>();
			header.add(listOther.get(0).toString());
			header.add(listOther.get(1).toString());
			header.add(listOther.get(2).toString());
			header.add(listOther.get(3).toString());
			header.add(listOther.get(4).toString());
			header.add(listOther.get(5).toString());
			header.add(listOther.get(6).toString());
			header.add(listOther.get(7).toString());
			header.add(listOther.get(8).toString());
			header.add(listOther.get(9).toString());
			List<List<Object>> list_data = null;
			if (listPage.getList() != null) {
				list_data = new ArrayList<>();
				for (LoginStatistics i : listPage.getList()) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(i.getTitle());
					list_str.add(i.getTotalId());
					list_str.add(i.getTotalMale());
					list_str.add(i.getTotalFemale());
					list_str.add(i.getTotalAge10());
					list_str.add(i.getTotalAge20());
					list_str.add(i.getTotalAge30());
					list_str.add(i.getTotalAge40());
					list_str.add(i.getTotalAge50());
					list_str.add(i.getTotalMemberNormal());
					list_str.add(i.getTotalMemberBusiness());
					list_data.add(list_str);
				}
			}
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response, ApplicationDefine.ExcelTemplate.COUNSELING_MEMBER_STATISTIC, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
