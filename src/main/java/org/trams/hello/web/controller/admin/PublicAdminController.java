/*
 * Created on 8 thg 12 2016 ( Time 10:33:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.User;
import org.trams.hello.bean.UserItem;
//--- Entities
//--- Services 
import org.trams.hello.business.service.UserService;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;
import org.trams.hello.web.common.Login;
import org.trams.hello.web.common.utils.EncryptionUtils;

@Controller
@RequestMapping("") 
public class PublicAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "main";
	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_INDEX   = "admin/index";
	private static final String JSP_LOGIN   = "public/admin/login";
	//Resource
	@Resource
	private UserService userService;
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public PublicAdminController() {
		super(PublicAdminController.class, MAIN_ENTITY_NAME);
		log("UserController created.");
	}
	
	@RequestMapping(value="",method=RequestMethod.POST)
	public String login(
			@RequestParam(value="username",defaultValue="") String username,
			@RequestParam(value="password",defaultValue="") String password,
			@RequestParam(value = "remember", defaultValue = "") String remember,
			Model model, HttpSession session, HttpServletResponse response) {
		if(username == null || password == null){
			model.addAttribute("username", username);
			model.addAttribute("login_success", 0);
			return  JSP_LOGIN; 
		}
		Integer role[] = new Integer[4];
		role[0] = ApplicationDefine.USER_ROLE_ADMIN;
		role[1] = ApplicationDefine.USER_ROLE_MONITERING;
		role[2] = ApplicationDefine.USER_ROLE_BUSSINESS;
		role[3] = ApplicationDefine.USER_ROLE_COUNSELING_CENTER;
		
		
		User user = userService.loginAdmin(username, EncryptionUtils.jwtBuild(password), role);
		if(user!=null){
			UserItem u = new UserItem();
			u.setId(user.getId());
			u.setFullname(user.getFullname());
			u.setEmail(user.getEmail());
			u.setLastLogin(user.getLastLogin());
			user.setLastLogin(new Date());
			userService.update(user);
			if(user.getRoleId() == ApplicationDefine.USER_ROLE_ADMIN || user.getRoleId() == ApplicationDefine.USER_ROLE_MONITERING){
				Login.saveAdmin(u, session);
				return "redirect:/"+ JSP_INDEX;
			} else if(user.getRoleId() == ApplicationDefine.USER_ROLE_BUSSINESS) {
				Login.saveCompany(u, session);
				return "redirect:/company/auth/home";
			} else {
				Login.saveCounselingCenter(u, session);
				return "redirect:/counselingCenter/auth/home";
			}
			
		}else{
			model.addAttribute("username", username);
			model.addAttribute("login_success", 0);
			return  JSP_LOGIN; 
		}
		
	}
	
	@RequestMapping(value="",method=RequestMethod.GET)
	public String login(Model model, HttpSession session) {
			return JSP_LOGIN;	
		}
	@RequestMapping(value="/admin",method=RequestMethod.GET)
	public String admin(Model model, HttpSession session) {
			return JSP_LOGIN;	
	}
	
	@RequestMapping("/public/admin/logout")
	public String logout(Model model, HttpSession session) {
			Login.removeAdminLogin(session);
			return "redirect:/";	
	}
	
	@RequestMapping(value="/company",method=RequestMethod.GET)
	public String company(Model model, HttpSession session) {
			return JSP_LOGIN;	
	}
	
	@RequestMapping("/public/company/logout")
	public String logoutCompany(Model model, HttpSession session) {
			Login.removeCompanyLogin(session);
			return "redirect:/";	
	}
	
	@RequestMapping(value="/counselingCenter",method=RequestMethod.GET)
	public String counselingCenter(Model model, HttpSession session) {
			return JSP_LOGIN;	
	}
	
	@RequestMapping("/public/counselingCenter/logout")
	public String logoutCounselingCenter(Model model, HttpSession session) {
			Login.removeCounselingCenterLogin(session);
			return "redirect:/";	
	}

}
