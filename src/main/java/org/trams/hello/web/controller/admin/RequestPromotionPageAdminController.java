/*
 * Created on 23 thg 1 2017 ( Time 11:51:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
//--- Entities
import org.trams.hello.bean.PromotionPage;
import org.trams.hello.bean.User;
import org.trams.hello.bean.jpa.PromotionPageEntity;
import org.trams.hello.bean.jpa.PromotionPageLinkEntity;
import org.trams.hello.business.service.PromotionPageLinkService;
//--- Services 
import org.trams.hello.business.service.PromotionPageService;
import org.trams.hello.business.service.UserService;
import org.trams.hello.common.mail.Mail;
import org.trams.hello.common.mail.Mail.EmailTemplate;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;
import org.trams.hello.web.common.Pager;
import org.trams.hello.web.common.utils.DataUtils;

/**
 * Spring MVC controller for 'PromotionPage' management.
 */
@Controller
@RequestMapping("/admin/request/requestPromotionPage")
public class RequestPromotionPageAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "requestPromotionPage";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "requestPromotionPage";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "admin/request/requestPromotionPage/create";
	private static final String JSP_LIST   = "admin/request/requestPromotionPage/list";
	private static final String JSP_EDIT   = "admin/request/requestPromotionPage/edit";
	private static final String JSP_DETAIL   = "admin/request/requestPromotionPage/detail";

	//--- Main entity service
	@Resource
    private PromotionPageService requestPromotionPageService; // Injected by Spring
	
	@Resource
    private UserService userService;
	
	@Resource
	private PromotionPageLinkService promotionPageLinkService;
	
	@Resource
	private PromotionPageService promotionPageService;
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public RequestPromotionPageAdminController() {
		super(RequestPromotionPageAdminController.class, MAIN_ENTITY_NAME );
		log("PromotionPageAdminController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="status",defaultValue="") Short[] status,
			@RequestParam(value="key",defaultValue="") String key,
			@RequestParam(value="search",defaultValue="0") Integer search,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		if(key==null){
			key="";
		}
		Page<PromotionPageEntity> listPage = null;
		if(search >0){
			if(status.length == 1){
				listPage=requestPromotionPageService.listPagingBy_StatusAndBussinessName(status , key, page, PAGE_SIZE);
			}else{
				listPage=requestPromotionPageService.listPagingRequest(key, page, PAGE_SIZE);
			}
			model.addAttribute("status", status);
		}else{
			Short[] statusPro= new Short[1];
			statusPro[0] = 0;
			listPage=requestPromotionPageService.listPagingBy_StatusAndBussinessName(statusPro , key, page, PAGE_SIZE);
			model.addAttribute("status", statusPro);
		}
		String status_param ="";
		if(status.length == 1){
			status_param = "status="+status[0]+"&amp;";
		}
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("key", key);
		
		model.addAttribute("activePage", nav);
		model.addAttribute("pagination_navigator", "/admin/requestPromotionPage/list");
		new Pager<PromotionPageEntity>(listPage).setSetting(model,request);		
		return JSP_LIST;
	}

	
	@RequestMapping("/detail/{id}")
	public String detail(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id) {
		PromotionPage requestPromotionPage = requestPromotionPageService.findById(id);
		model.addAttribute("requestPromotionPage", requestPromotionPage);
		return JSP_DETAIL;
	}
	@RequestMapping(value = "/create", method = RequestMethod.GET ) 
	public String create(
			HttpSession session,
			Model model) {
		log("Action 'create'");
		model.addAttribute("activePage", nav);
		return JSP_CREATE;
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST ) 
	public String create(
			HttpSession session,
			@ModelAttribute PromotionPage requestPromotionPage,
			Model model) {
		log("Action 'create'");
		try {
			requestPromotionPage.setCreateDate( new Date() );
			requestPromotionPage.setUpdateDate( new Date() );
			requestPromotionPageService.create(requestPromotionPage);
			return "redirect:/"+JSP_LIST;
		} catch(Exception e) {
			System.out.println(e);
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/edit/{id}", method = RequestMethod.GET)
	public String update(
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
		try {
			PromotionPage item = requestPromotionPageService.findById(id);
			List<PromotionPageLinkEntity> list_link = promotionPageLinkService.findByPromotionPageId(id);
			model.addAttribute("item", item);
			model.addAttribute("list_link", list_link);
			model.addAttribute("activePage", nav);
			model.addAttribute("item", item);
			model.addAttribute("activePage", nav);
			return JSP_EDIT;
		} catch(Exception e) {
			return JSP_LIST;
		}
	}
	
	@RequestMapping(value = "/edit/{id}", method = RequestMethod.POST)
	public String update(
	@RequestParam(value="approve",defaultValue="0") Integer approve,
	@RequestParam(value="reserve",defaultValue="0") Integer reserve,
	@RequestParam(value="reserveReason",defaultValue="") String reserveReason,
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
		
			PromotionPage item = requestPromotionPageService.findById(id);
			User u = userService.findById(item.getBusinessId());
			try {
				if(approve == 1){
					item.setStatus((short)1);
					promotionPageService.update(item);
					HashMap<String, Object> params = new HashMap<>();
					params.put("createDate", DataUtils.parseStringFromDate(new Date(), "yyyy MM월 dd일  HH:mm:ss"));
					Mail.sendEmailTemplate(u.getEmail(), params, EmailTemplate.ACCEPT_PROMOTION_PAGE, ApplicationDefine.EmailSubject.ACCEPT_PROMOTION_PAGE.getCode());
					return "redirect:/"+JSP_LIST;
				}else{
					item.setStatus((short)2);
					item.setReserveDate(new Date());
					item.setReserveReason(reserveReason);
					promotionPageService.update(item);
					HashMap<String, Object> params = new HashMap<>();
					params.put("createDate", DataUtils.parseStringFromDate(new Date(), "yyyy MM월 dd일  HH:mm:ss"));
					params.put("reason", reserveReason);
					Mail.sendEmailTemplate(u.getEmail(), params, EmailTemplate.REFUSE_PROMOTION_PAGE, ApplicationDefine.EmailSubject.REFUSE_PROMOTION_PAGE.getCode());
					return "redirect:/"+JSP_EDIT+"/"+id;
				}
			} catch(Exception e) {
				e.printStackTrace();
			}
			return "redirect:/"+JSP_EDIT+"/"+id;
	}
	
	

	@RequestMapping(value = "/delete/{id}")
	public String delete(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id ) {
	
			
	requestPromotionPageService.delete(id);
	return "redirect:/"+JSP_LIST;
	}

}
