/*
 * Created on 12 May 2017 ( Time 10:13:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.Category;
import org.trams.hello.bean.Inquiry;
import org.trams.hello.bean.PageCustom;
import org.trams.hello.bean.User;
import org.trams.hello.bean.UserItem;
import org.trams.hello.bean.jpa.CategoryEntity;
import org.trams.hello.bean.web.admin.InquiryAdmin;
import org.trams.hello.business.service.CategoryService;
import org.trams.hello.business.service.InquiryService;
import org.trams.hello.business.service.UserService;
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.Login;
import org.trams.hello.web.common.Pager;

/**
 * Spring MVC controller for 'Inquiry' management.
 */
@Controller
@RequestMapping("/admin/cs/inquiry")
public class InquiryAdminController extends AbstractController {

	private static final String MAIN_ENTITY_NAME = "inquiry";
	private static final String MAIN_LIST_NAME = "list";
	private static final Integer PAGE_SIZE   = 30;
	private static String nav = "inquiry";
	private static final String JSP_LIST   = "admin/cs/inquiry/list";
	private static final String JSP_COUNSELOR_DETAIL   	= "admin/cs/inquiry/counselor_detail";
	private static final String JSP_COUNSELOR_REPLY   	= "admin/cs/inquiry/counselor_reply";
	private static final String JSP_MEMBER_DETAIL   	= "admin/cs/inquiry/member_detail";
	private static final String JSP_MEMBER_REPLY   		= "admin/cs/inquiry/member_reply";
	@Resource
    private InquiryService inquiryService;
	@Resource
    private UserService userService;
	@Resource
    private CategoryService categoryService;

	public InquiryAdminController() {
		super(InquiryAdminController.class, MAIN_ENTITY_NAME );
		log("InquiryAdminController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="category_id", defaultValue="0") Integer category_id,
			@RequestParam(value="type_search", defaultValue="content") String type_search,
			@RequestParam(value="type", defaultValue="1") Integer type,
			@RequestParam(value="key", defaultValue="") String key,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		if(key == null){
			key="";
		}
		List<CategoryEntity> categories = categoryService.findByType((short) 8);
		PageCustom<InquiryAdmin> listPage = inquiryService.listPagingByUser(category_id, type_search, type, key, page, PAGE_SIZE);
		
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("category_id", category_id);
		model.addAttribute("keyword", key);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("categories", categories);
		model.addAttribute("pagination_navigator", "/admin/cs/inquiry/list");
		model.addAttribute("list", listPage.getList());
		model.addAttribute("page", page);
		model.addAttribute("totalCount", listPage.getTotalCount());
		new Pager<InquiryAdmin>(listPage).setManualSetting(model, request);
			
		return JSP_LIST;
	}

	
	@RequestMapping("/type/{type}/detail/{id}")
	public String detail(Model model, HttpSession session, @PathVariable("id") Integer id, @PathVariable("type") Integer type) {
		Inquiry inquiry = inquiryService.findById(id);
		User user = new User();
		if (type != 1) {
			user = userService.findById(inquiry.getAskUserId());
		}
		User admin = userService.findById(inquiry.getAnswerUserId());
		Category category = categoryService.findById(inquiry.getCategoryId());
		model.addAttribute("inquiry", inquiry);
		model.addAttribute("user", user);
		model.addAttribute("admin", admin);
		model.addAttribute("category", category);
		model.addAttribute("type", type);
		if (type == 1) {
			return JSP_MEMBER_DETAIL;
		} else {
			return JSP_COUNSELOR_DETAIL;
		}
	}
	
	@RequestMapping("/type/{type}/reply/{id}")
	public String replyInquiry(Model model, HttpSession session, @PathVariable("id") Integer id, @PathVariable("type") Integer type) {
		Inquiry inquiry = inquiryService.findById(id);
		User user = new User();
		if (type != 1) {
			user = userService.findById(inquiry.getAskUserId());
		}
		
		Category category = categoryService.findById(inquiry.getCategoryId());
		UserItem userItem = Login.getAdminLogin(session);
		
		model.addAttribute("adminId", userItem.getId());
		model.addAttribute("inquiry", inquiry);
		model.addAttribute("category", category);
		model.addAttribute("type", type);
		model.addAttribute("user", user);
		if (type == 1) {
			return JSP_MEMBER_REPLY;
		} else {
			return JSP_COUNSELOR_REPLY;
		}
	}
	
	

}
