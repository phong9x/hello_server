/*
 * Created on 25 May 2017 ( Time 11:29:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.Business;
import org.trams.hello.bean.CounselingCenter;
import org.trams.hello.bean.PageCustom;
import org.trams.hello.bean.ProfitData;
import org.trams.hello.business.service.BusinessService;
import org.trams.hello.business.service.CounselingCenterService;
import org.trams.hello.business.service.CounselingSessionService;
import org.trams.hello.web.bean.search.SearchProfitBusiness;
import org.trams.hello.web.bean.search.SearchProfitCounselor;
import org.trams.hello.web.bean.search.SearchProfitCounselorCenter;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;
import org.trams.hello.web.common.Pager;
import org.trams.hello.web.common.utils.DataUtils;
import org.trams.hello.web.common.utils.ExcelUtils;

/**
 * Spring MVC controller for 'PaymentProfit' management.
 */
@Controller
@RequestMapping("/admin/profit/data")
public class ProfitDataAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "paymentProfit";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 30;

	private static String nav = "profit";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_COUNSELOR_LIST   = "admin/profit/data/counselor";
	private static final String JSP_COUNSELOR_CENTER_LIST   = "admin/profit/data/counselorCenter";
	private static final String JSP_BUSINESS_LIST   = "admin/profit/data/business";
	//--- Main entity service
	
	@Resource
    private CounselingSessionService counselingSessionService;
	
	@Resource
    private CounselingCenterService counselingCenterService;
	
	@Resource
    private BusinessService businessService;

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public ProfitDataAdminController() {
		super(ProfitDataAdminController.class, MAIN_ENTITY_NAME );
		log("PaymentProfitAdminController created.");
	}

	@RequestMapping("/counselor")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="search",defaultValue="false") Boolean search,
			@ModelAttribute SearchProfitCounselor s,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		if(!search){
			s.setUseHelloCoin(true);
			s.setUseVoucher(true);
		}
		PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataCounselor(s, page, PAGE_SIZE);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("s", s);
		model.addAttribute("activePage", nav);
		model.addAttribute("total",listPage.getOther().get(0));
		new Pager<ProfitData>(listPage).setManualSetting(model, request);
		return JSP_COUNSELOR_LIST;
	}
	
	@RequestMapping(value = "/counselor/excel", method = RequestMethod.GET)
	public void exportExcel(
			@ModelAttribute SearchProfitCounselor s,
			HttpSession session, Model model, 
			HttpServletResponse response,
			HttpServletRequest request
			) {
		log("Action 'create'");
		try {
			PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataCounselor(s, 1, Integer.MAX_VALUE);
			List<ProfitData> list = listPage.getList();
			List<Object> header = new ArrayList<>();
			header.add(listPage.getOther().get(0));
			List<List<Object>> list_data = null;
			if (list != null) {
				list_data = new ArrayList<>();
				int index =1;
				for (ProfitData i : list) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(index);
					list_str.add(i.getCounselorName());
					list_str.add(i.getCounselorUserName());
					if(i.getCounselorType() == 1){
						list_str.add("프리랜서");
					}else{
						list_str.add("센터 소속");
					}
					list_str.add(i.getUserName());
					if(i.getTypeCoin() == 1){
						list_str.add("헬로코인 사용");
					}else{
						list_str.add("상담권 사용");
					}
					list_str.add(DataUtils.parseStringFromDate(i.getDatePayment(), "yyyy-MM-dd HH:mm:ss"));
					list_str.add(i.getMoney());
					list_data.add(list_str);
					index++;
				}
			}
			
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response,ApplicationDefine.ExcelTemplate.PROFIT_DATA_COUNSELOR, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/counselorCenter")
	public String list_center(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="search",defaultValue="false") Boolean search,
			@ModelAttribute SearchProfitCounselorCenter s,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		if(!search){
			s.setUseHelloCoin(true);
			s.setUseVoucher(true);
		}
		PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataCounselorCenter(s , page, PAGE_SIZE);
		List<CounselingCenter> list_center = counselingCenterService.findAll();
		model.addAttribute("list_center", list_center);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("s", s);
		model.addAttribute("activePage", nav);
		model.addAttribute("total",listPage.getOther().get(0));
		new Pager<ProfitData>(listPage).setManualSetting(model, request);
		return JSP_COUNSELOR_CENTER_LIST;
	}
	
	@RequestMapping(value = "/counselorCenter/excel", method = RequestMethod.GET)
	public void exportExcel_center(
			@ModelAttribute SearchProfitCounselorCenter s,
			HttpSession session, Model model, 
			HttpServletResponse response,
			HttpServletRequest request
			) {
		log("Action 'create'");
		try {
			PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataCounselorCenter(s, 1, Integer.MAX_VALUE);
			List<ProfitData> list = listPage.getList();
			List<String> header = new ArrayList<>();
			header.add("번호");
			header.add("상담사명");
			header.add("사업자 구분");
			header.add("센터명");
			header.add("회원명");
			header.add("결제 구분");
			header.add("결제일시");
			header.add("금액");
			List<List<Object>> list_data = null;
			if (list != null) {
				list_data = new ArrayList<>();
				int index =1;
				for (ProfitData i : list) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(index);
					list_str.add(i.getCounselorName());
					if(i.getCounselorType() == 1){
						list_str.add("프리랜서");
					}else{
						list_str.add("센터 소속");
					}
					list_str.add(i.getCenterName());
					list_str.add(i.getUserName());
					if(i.getTypeCoin() == 1){
						list_str.add("헬로코인 사용");
					}else{
						list_str.add("상담권 사용");
					}
					list_str.add(DataUtils.parseStringFromDate(i.getDatePayment(), "yyyy-MM-dd HH:mm:ss"));
					list_str.add(i.getMoney());
					list_data.add(list_str);
					index++;
				}
			}
			ExcelUtils.createExcelFile(request, response, null, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/business")
	public String list_business(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@ModelAttribute SearchProfitBusiness s,
			HttpSession session,
			HttpServletRequest request,
			Model model) {
		PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataBusiness(s , page, PAGE_SIZE);
		List<Business> list_business = businessService.findAll();
		model.addAttribute("list_business", list_business);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("s", s);
		model.addAttribute("activePage", nav);
		model.addAttribute("total",listPage.getOther().get(0));
		new Pager<ProfitData>(listPage).setManualSetting(model, request);
		return JSP_BUSINESS_LIST;
	}
	
	@RequestMapping(value = "/business/download", method = RequestMethod.GET)
	public void exportExcel_business(
			@ModelAttribute SearchProfitBusiness s,
			HttpSession session, Model model, 
			HttpServletResponse response,
			HttpServletRequest request
			) {
		log("Action 'create'");
		try {
			PageCustom<ProfitData> listPage = counselingSessionService.filterProfitDataBusiness(s, 1, Integer.MAX_VALUE);
			List<ProfitData> list = listPage.getList();
			List<Object> header = new ArrayList<>();
			header.add(listPage.getOther().get(0));
			List<List<Object>> list_data = null;
			if (list != null) {
				list_data = new ArrayList<>();
				int index =1;
				for (ProfitData i : list) {
					List<Object> list_str = new ArrayList<Object>();
					list_str.add(index);
					list_str.add(i.getBusinessName());
					list_str.add(i.getManageYear());
					list_str.add(i.getBusinessSubName());
					list_str.add(i.getUserName());
					list_str.add(i.getVoucherNumber());
					list_str.add(DataUtils.parseStringFromDate(i.getDatePayment(), "yyyy-MM-dd HH:mm:ss"));
					list_str.add(i.getMoney());
					list_data.add(list_str);
					index++;
				}
			}
			ExcelUtils.createExcelFileUseTemplateHeaderCustom(request, response,ApplicationDefine.ExcelTemplate.PROFIT_DATA_BUSINESS, header, list_data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}



	
}
