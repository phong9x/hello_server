/*
 * Created on 8 thg 12 2016 ( Time 10:33:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.web.controller.admin;

import java.util.Calendar;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.trams.hello.bean.DataChart;
import org.trams.hello.bean.jpa.MenuAdminLevel2Entity;
//--- Entities
import org.trams.hello.business.service.CounselorService;
import org.trams.hello.business.service.InquiryService;
import org.trams.hello.business.service.MenuAdminLevel2Service;
//--- Services 
import org.trams.hello.business.service.UserService;
//--- Common classes
import org.trams.hello.web.common.AbstractController;
import org.trams.hello.web.common.ApplicationDefine;

@Controller
@RequestMapping("/admin") 
public class MainAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "main";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_INDEX   = "admin/index";

	//Resource
	@Resource
	private UserService userService;
	
	@Resource
	private CounselorService counselorService;
	
	@Resource
	private MenuAdminLevel2Service menuAdminLevel2Service;
	
	@Resource
	private InquiryService inquiryService;

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public MainAdminController() {
		super(MainAdminController.class, MAIN_ENTITY_NAME);
		log("UserController created.");
	}
	
	@RequestMapping(value={"/index"}, method = RequestMethod.GET)
	public String index_get(
			Model model,HttpSession session,
			@RequestParam(value="typeChartLine",defaultValue="login") String typeChartLine
			) {
		Calendar yesterday = Calendar.getInstance();
		Integer nowHour = yesterday.get(Calendar.HOUR_OF_DAY);
		yesterday.add(Calendar.DAY_OF_YEAR, -1);
		List<Integer> total_user = userService.totalUserHome(yesterday.getTime());
		List<Integer> total_iniquiry = inquiryService.totalInquiry();
		List<Integer> total_request = userService.totalRequestAndCounselingHome();
		Calendar c = Calendar.getInstance();
		c.add(Calendar.DATE, -7);
		List<DataChart> list_chart = userService.getDataChart(c.getTime(),typeChartLine);
		String chart_date = "";
		String chart_data = "";
		String chart_remove = "";
		String chart_join = "";
		String chart_login = "";
		for (int i = 0; i < list_chart.size(); i++) {
			DataChart dc = list_chart.get(i);
			if(i == 0){
				chart_date = "'"+dc.getDate()+"'";
				chart_data =dc.getData().toString();
				chart_join =dc.getJoinNumber().toString();
				chart_remove =dc.getRemoveAccountNumber().toString();
			}else{
				chart_date = chart_date+",'"+dc.getDate()+"'";
				chart_data =chart_data+","+dc.getData().toString();
				chart_join =chart_join+","+dc.getJoinNumber().toString();
				chart_remove =chart_remove+","+dc.getRemoveAccountNumber().toString();
			}
		}
		if(typeChartLine.equals("login")){
			model.addAttribute("chartLineTitle", "로그인");
			model.addAttribute("preChart", "counselingFee");
			model.addAttribute("nextChart", "reservationNumber");
		}else if(typeChartLine.equals("reservationNumber")){
			model.addAttribute("chartLineTitle", "예약건수");
			model.addAttribute("preChart", "login");
			model.addAttribute("nextChart", "counselingNumber");
		}else if(typeChartLine.equals("counselingNumber")){
			model.addAttribute("chartLineTitle", "상담건수");
			model.addAttribute("preChart", "reservationNumber");
			model.addAttribute("nextChart", "counselingFee");
		}else{
			model.addAttribute("chartLineTitle", "상담금액");
			model.addAttribute("preChart", "counselingNumber");
			model.addAttribute("nextChart", "login");
		}
		
		model.addAttribute("yesterday", yesterday.getTime());
		model.addAttribute("activePage", "home");
		model.addAttribute("chart_date", chart_date);
		model.addAttribute("chart_data", chart_data);
		model.addAttribute("chart_join", chart_join);
		model.addAttribute("chart_remove", chart_remove);
		model.addAttribute("chart_login", chart_login);
		
		List<MenuAdminLevel2Entity> list_menu_show = menuAdminLevel2Service.findByIsShow(1);
		List<MenuAdminLevel2Entity> list_menu_all = menuAdminLevel2Service.findAllMenu();
		Short statusCounselor[] = new Short[1];
		statusCounselor[0]= ApplicationDefine.Counselor_Status.NormalDisplay.getCode();
		List<Integer> list = counselorService.totalCounselorHome(nowHour,statusCounselor );
		model.addAttribute("list_menu_show", list_menu_show);
		model.addAttribute("list_menu_all", list_menu_all);
		model.addAttribute("total_user", total_user.get(0));
		model.addAttribute("total_user_counselor", total_user.get(1));
		model.addAttribute("total_user_bussiness", total_user.get(2));
		model.addAttribute("total_user_center", total_user.get(3));
		model.addAttribute("total_user_end_constract", total_user.get(4));
		model.addAttribute("total_couselor_counseled", list.get(0));
		model.addAttribute("total_couselor", list.get(1));
		model.addAttribute("total_couselor_online", list.get(2));
		model.addAttribute("total_counseling", total_request.get(0));
		model.addAttribute("total_reuqest_profile", total_request.get(1));
		model.addAttribute("total_request_ads_page", total_request.get(2));
		model.addAttribute("total_iniquiry_request", total_iniquiry.get(0));
		model.addAttribute("total_iniquiry_answer", total_iniquiry.get(1));
		return JSP_INDEX;
	}
	
	@RequestMapping(value={"/index"}, method = RequestMethod.POST)
	public String index_post(
			@RequestParam(value="menu_id",defaultValue="") Integer[] menu_id,
			Model model,HttpSession session) {
		menuAdminLevel2Service.updateNotShow();
		menuAdminLevel2Service.updateShow(menu_id);
		menuAdminLevel2Service.deleteCacheAdminMenu();
		return "redirect:/"+JSP_INDEX;
	}

}
