/*
 * Created on 22 thg 2 2017 ( Time 13:22:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.rest.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.trams.hello.bean.UserItem;
import org.trams.hello.bean.api.PromotionPageApi;
import org.trams.hello.bean.jpa.PromotionPageEntity;
import org.trams.hello.bean.jpa.PromotionPageLinkEntity;
import org.trams.hello.bean.jpa.UserEntity;
import org.trams.hello.business.service.PromotionPageLinkService;
import org.trams.hello.business.service.PromotionPageService;
import org.trams.hello.business.service.UserService;
import org.trams.hello.rest.common.AbstractRestController;
import org.trams.hello.rest.common.AuthorizationToken;

/**
 * Spring MVC controller for 'PromotionPage' management.
 */
@RequestMapping("/v1/auth/promotionPage")
@Controller
public class PromotionPageRestController extends AbstractRestController{

	@Autowired
	private UserService userService;
	@Resource
	private PromotionPageService promotionPageService;
	@Resource
	private PromotionPageLinkService promotionPageLinkService;

	@RequestMapping( value="",
			method = {RequestMethod.POST, RequestMethod.GET},
			produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> filter(
			HttpServletRequest httpRequest
	) {
		try {
			String token = httpRequest.getHeader("token");
			UserItem user = AuthorizationToken.convertToObject(token);

			UserEntity userEntity = userService.findOne(user.getId());

			Map<String, Object> params = new HashMap<>(3);
			params.put("businessId", userEntity.getBusinessSub().getBusiness().getId());
			List<PromotionPageEntity> entities = promotionPageService.getPromotionPageByBussinessId(userEntity.getBusinessSub().getBusiness().getId());
			if(entities.size() > 0){
				PromotionPageEntity promotionPageEntity = entities.get(0);
				PromotionPageApi p = new PromotionPageApi();
				p.setBackgroundName(promotionPageEntity.getBackgroundName());
				p.setBackgroundUrl(promotionPageEntity.getBackgroundUrl());
				p.setBusiness(null);
				p.setCreateDate(promotionPageEntity.getCreateDate());
				p.setId(promotionPageEntity.getId());
				p.setIsShow(promotionPageEntity.getIsShow());
				p.setLogoName(promotionPageEntity.getLogoName());
				p.setLogoUrl(promotionPageEntity.getLogoUrl());
				p.setReserveDate(promotionPageEntity.getReserveDate());
				p.setReserveReason(promotionPageEntity.getReserveReason());
				p.setStatus(promotionPageEntity.getStatus());
				p.setUpdateDate(promotionPageEntity.getUpdateDate());
				List<PromotionPageLinkEntity> listPageLink =  promotionPageLinkService.findByPromotionPageId(promotionPageEntity.getId());
				promotionPageEntity.setBusiness(null);
				for (PromotionPageLinkEntity entity : listPageLink) {
					entity.setPromotionPage(null);
				}
				p.setListOfPromotionPageLink(listPageLink);
				return SUCCESS(p);
			}else{
				return SUCCESS("No Promotionpage!");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			return FAIL(e.getMessage());
		}

	}
	
}



