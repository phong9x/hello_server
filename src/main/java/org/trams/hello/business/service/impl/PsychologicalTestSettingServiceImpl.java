/*
 * Created on 22 thg 2 2017 ( Time 10:37:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.trams.hello.bean.PsychologicalTestSetting;
import org.trams.hello.bean.jpa.PsychologicalTestSettingEntity;
import org.trams.hello.business.service.PsychologicalTestSettingService;
import org.trams.hello.business.service.mapping.PsychologicalTestSettingServiceMapper;
import org.trams.hello.data.repository.jpa.PsychologicalTestSettingJpaRepository;
/**
 * Implementation of PsychologicalTestSettingService
 */
@Component
@Transactional
public class PsychologicalTestSettingServiceImpl implements PsychologicalTestSettingService {

	@Resource
	private PsychologicalTestSettingJpaRepository psychologicalTestSettingJpaRepository;

	private static final Integer PAGE_SIZE   = 15;

	@Resource
	private PsychologicalTestSettingServiceMapper psychologicalTestSettingServiceMapper;
	
	@Override
	public PsychologicalTestSetting findById(Integer id) {
		PsychologicalTestSettingEntity psychologicalTestSettingEntity = psychologicalTestSettingJpaRepository.findOne(id);
		return psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingEntityToPsychologicalTestSetting(psychologicalTestSettingEntity);
	}

	@Override
	public Page<PsychologicalTestSettingEntity> findAll(Integer pageNumber) {

		PageRequest request = new PageRequest(pageNumber - 1, PAGE_SIZE,
				new Sort(new Order(Direction.DESC, "id")));
		return psychologicalTestSettingJpaRepository.findAll(request);
	}

	@Override
	public List<PsychologicalTestSetting> findAll() {
		Iterable<PsychologicalTestSettingEntity> entities = psychologicalTestSettingJpaRepository.findAll();
		List<PsychologicalTestSetting> beans = new ArrayList<PsychologicalTestSetting>();
		for(PsychologicalTestSettingEntity psychologicalTestSettingEntity : entities) {
			beans.add(psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingEntityToPsychologicalTestSetting(psychologicalTestSettingEntity));
		}
		return beans;
	}

	/**
	 * Count total entit
	 * @return Long
	 */
	public Long countTotal(){
		Long count = psychologicalTestSettingJpaRepository.count();
		return count;
	}

	@Override
	public PsychologicalTestSetting save(PsychologicalTestSetting psychologicalTestSetting) {
		return update(psychologicalTestSetting) ;
	}

	@Override
	public PsychologicalTestSetting create(PsychologicalTestSetting psychologicalTestSetting) {
/*
		PsychologicalTestSettingEntity psychologicalTestSettingEntity = psychologicalTestSettingJpaRepository.findOne(psychologicalTestSetting.getId());
		if( psychologicalTestSettingEntity != null ) {
			throw new IllegalStateException("already.exists");
		}

		psychologicalTestSettingEntity = new PsychologicalTestSettingEntity();
		psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingToPsychologicalTestSettingEntity(psychologicalTestSetting, psychologicalTestSettingEntity);
		PsychologicalTestSettingEntity psychologicalTestSettingEntitySaved = psychologicalTestSettingJpaRepository.save(psychologicalTestSettingEntity);
		return psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingEntityToPsychologicalTestSetting(psychologicalTestSettingEntitySaved);
*/
		PsychologicalTestSettingEntity psychologicalTestSettingEntity = new PsychologicalTestSettingEntity();
		psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingToPsychologicalTestSettingEntity(psychologicalTestSetting, psychologicalTestSettingEntity);
		PsychologicalTestSettingEntity psychologicalTestSettingEntitySaved = psychologicalTestSettingJpaRepository.save(psychologicalTestSettingEntity);
		return psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingEntityToPsychologicalTestSetting(psychologicalTestSettingEntitySaved);
	}

	@Override
	public PsychologicalTestSetting update(PsychologicalTestSetting psychologicalTestSetting) {
		PsychologicalTestSettingEntity psychologicalTestSettingEntity = psychologicalTestSettingJpaRepository.findOne(psychologicalTestSetting.getId());
		psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingToPsychologicalTestSettingEntity(psychologicalTestSetting, psychologicalTestSettingEntity);
		PsychologicalTestSettingEntity psychologicalTestSettingEntitySaved = psychologicalTestSettingJpaRepository.save(psychologicalTestSettingEntity);
		return psychologicalTestSettingServiceMapper.mapPsychologicalTestSettingEntityToPsychologicalTestSetting(psychologicalTestSettingEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		psychologicalTestSettingJpaRepository.delete(id);
	}

	public PsychologicalTestSettingJpaRepository getPsychologicalTestSettingJpaRepository() {
		return psychologicalTestSettingJpaRepository;
	}

	public void setPsychologicalTestSettingJpaRepository(PsychologicalTestSettingJpaRepository psychologicalTestSettingJpaRepository) {
		this.psychologicalTestSettingJpaRepository = psychologicalTestSettingJpaRepository;
	}

	public PsychologicalTestSettingServiceMapper getPsychologicalTestSettingServiceMapper() {
		return psychologicalTestSettingServiceMapper;
	}

	public void setPsychologicalTestSettingServiceMapper(PsychologicalTestSettingServiceMapper psychologicalTestSettingServiceMapper) {
		this.psychologicalTestSettingServiceMapper = psychologicalTestSettingServiceMapper;
	}

	@Override
	public Page<PsychologicalTestSettingEntity> listPaging(Integer page, Integer size) {
		try {
			PageRequest pageable = new PageRequest(page-1, size, new Sort(new Order(Direction.DESC, "createDate")));
			return psychologicalTestSettingJpaRepository.listPaging(pageable);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	


}
