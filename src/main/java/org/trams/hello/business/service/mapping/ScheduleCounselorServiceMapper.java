/*
 * Created on 1 thg 12 2016 ( Time 15:28:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.ScheduleCounselor;
import org.trams.hello.bean.jpa.ScheduleCounselorEntity;
import org.trams.hello.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ScheduleCounselorServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ScheduleCounselorServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ScheduleCounselorEntity' to 'ScheduleCounselor'
	 * @param scheduleCounselorEntity
	 */
	public ScheduleCounselor mapScheduleCounselorEntityToScheduleCounselor(ScheduleCounselorEntity scheduleCounselorEntity) {
		if(scheduleCounselorEntity == null) {
			return null;
		}

		//--- Generic mapping 
		ScheduleCounselor scheduleCounselor = map(scheduleCounselorEntity, ScheduleCounselor.class);

		//--- Link mapping ( link to User )
		if(scheduleCounselorEntity.getUser() != null) {
			scheduleCounselor.setUserId(scheduleCounselorEntity.getUser().getId());
		}
		return scheduleCounselor;
	}
	
	/**
	 * Mapping from 'ScheduleCounselor' to 'ScheduleCounselorEntity'
	 * @param scheduleCounselor
	 * @param scheduleCounselorEntity
	 */
	public void mapScheduleCounselorToScheduleCounselorEntity(ScheduleCounselor scheduleCounselor, ScheduleCounselorEntity scheduleCounselorEntity) {
		if(scheduleCounselor == null) {
			return;
		}

		//--- Generic mapping 
		map(scheduleCounselor, scheduleCounselorEntity);

		//--- Link mapping ( link : scheduleCounselor )
		if( hasLinkToUser(scheduleCounselor) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( scheduleCounselor.getUserId() );
			scheduleCounselorEntity.setUser( user1 );
		} else {
			scheduleCounselorEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(ScheduleCounselor scheduleCounselor) {
		if(scheduleCounselor.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}