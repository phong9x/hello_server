/*
 * Created on 14 Mar 2017 ( Time 14:52:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.trams.hello.bean.MenuAdminLevel3;
import org.trams.hello.bean.jpa.MenuAdminLevel3Entity;
import org.trams.hello.business.service.MenuAdminLevel3Service;
import org.trams.hello.business.service.mapping.MenuAdminLevel3ServiceMapper;
import org.trams.hello.data.repository.jpa.MenuAdminLevel3JpaRepository;
/**
 * Implementation of MenuAdminLevel3Service
 */
@Component
@Transactional
public class MenuAdminLevel3ServiceImpl implements MenuAdminLevel3Service {

	@Resource
	private MenuAdminLevel3JpaRepository menuAdminLevel3JpaRepository;

	private static final Integer PAGE_SIZE   = 15;

	@Resource
	private MenuAdminLevel3ServiceMapper menuAdminLevel3ServiceMapper;
	
	@Override
	public MenuAdminLevel3 findById(Integer id) {
		MenuAdminLevel3Entity menuAdminLevel3Entity = menuAdminLevel3JpaRepository.findOne(id);
		return menuAdminLevel3ServiceMapper.mapMenuAdminLevel3EntityToMenuAdminLevel3(menuAdminLevel3Entity);
	}

	@Override
	public Page<MenuAdminLevel3Entity> findAll(Integer pageNumber) {

		PageRequest request = new PageRequest(pageNumber - 1, PAGE_SIZE,
				new Sort(new Order(Direction.DESC, "id")));
		return menuAdminLevel3JpaRepository.findAll(request);
	}

	@Override
	public List<MenuAdminLevel3> findAll() {
		Iterable<MenuAdminLevel3Entity> entities = menuAdminLevel3JpaRepository.findAll();
		List<MenuAdminLevel3> beans = new ArrayList<MenuAdminLevel3>();
		for(MenuAdminLevel3Entity menuAdminLevel3Entity : entities) {
			beans.add(menuAdminLevel3ServiceMapper.mapMenuAdminLevel3EntityToMenuAdminLevel3(menuAdminLevel3Entity));
		}
		return beans;
	}

	/**
	 * Count total entit
	 * @return Long
	 */
	public Long countTotal(){
		Long count = menuAdminLevel3JpaRepository.count();
		return count;
	}

	@Override
	public MenuAdminLevel3 save(MenuAdminLevel3 menuAdminLevel3) {
		return update(menuAdminLevel3) ;
	}

	@Override
	public MenuAdminLevel3 create(MenuAdminLevel3 menuAdminLevel3) {
/*
		MenuAdminLevel3Entity menuAdminLevel3Entity = menuAdminLevel3JpaRepository.findOne(menuAdminLevel3.getId());
		if( menuAdminLevel3Entity != null ) {
			throw new IllegalStateException("already.exists");
		}

		menuAdminLevel3Entity = new MenuAdminLevel3Entity();
		menuAdminLevel3ServiceMapper.mapMenuAdminLevel3ToMenuAdminLevel3Entity(menuAdminLevel3, menuAdminLevel3Entity);
		MenuAdminLevel3Entity menuAdminLevel3EntitySaved = menuAdminLevel3JpaRepository.save(menuAdminLevel3Entity);
		return menuAdminLevel3ServiceMapper.mapMenuAdminLevel3EntityToMenuAdminLevel3(menuAdminLevel3EntitySaved);
*/
		MenuAdminLevel3Entity menuAdminLevel3Entity = new MenuAdminLevel3Entity();
		menuAdminLevel3ServiceMapper.mapMenuAdminLevel3ToMenuAdminLevel3Entity(menuAdminLevel3, menuAdminLevel3Entity);
		MenuAdminLevel3Entity menuAdminLevel3EntitySaved = menuAdminLevel3JpaRepository.save(menuAdminLevel3Entity);
		return menuAdminLevel3ServiceMapper.mapMenuAdminLevel3EntityToMenuAdminLevel3(menuAdminLevel3EntitySaved);
	}

	@Override
	public MenuAdminLevel3 update(MenuAdminLevel3 menuAdminLevel3) {
		MenuAdminLevel3Entity menuAdminLevel3Entity = menuAdminLevel3JpaRepository.findOne(menuAdminLevel3.getId());
		menuAdminLevel3ServiceMapper.mapMenuAdminLevel3ToMenuAdminLevel3Entity(menuAdminLevel3, menuAdminLevel3Entity);
		MenuAdminLevel3Entity menuAdminLevel3EntitySaved = menuAdminLevel3JpaRepository.save(menuAdminLevel3Entity);
		return menuAdminLevel3ServiceMapper.mapMenuAdminLevel3EntityToMenuAdminLevel3(menuAdminLevel3EntitySaved);
	}

	@Override
	public void delete(Integer id) {
		menuAdminLevel3JpaRepository.delete(id);
	}

	public MenuAdminLevel3JpaRepository getMenuAdminLevel3JpaRepository() {
		return menuAdminLevel3JpaRepository;
	}

	public void setMenuAdminLevel3JpaRepository(MenuAdminLevel3JpaRepository menuAdminLevel3JpaRepository) {
		this.menuAdminLevel3JpaRepository = menuAdminLevel3JpaRepository;
	}

	public MenuAdminLevel3ServiceMapper getMenuAdminLevel3ServiceMapper() {
		return menuAdminLevel3ServiceMapper;
	}

	public void setMenuAdminLevel3ServiceMapper(MenuAdminLevel3ServiceMapper menuAdminLevel3ServiceMapper) {
		this.menuAdminLevel3ServiceMapper = menuAdminLevel3ServiceMapper;
	}

	@Override
	public Page<MenuAdminLevel3Entity> listPaging(Integer page, Integer size) {
		try {
			PageRequest pageable = new PageRequest(page-1, size, new Sort(new Order(Direction.DESC, "createDate")));
			return menuAdminLevel3JpaRepository.listPaging(pageable);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	

	@Override
	public Page<MenuAdminLevel3Entity> findByName(String name, Integer page, Integer size) {
		try {
			PageRequest pageable = new PageRequest(page-1, size, new Sort(new Order(Direction.DESC, "createDate")));
			return menuAdminLevel3JpaRepository.findByName(name, pageable);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

}
