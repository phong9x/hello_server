/*
 * Created on 15 thg 12 2016 ( Time 10:18:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.trams.hello.bean.ReportDaily;
import org.trams.hello.bean.jpa.ReportDailyEntity;
import org.trams.hello.business.service.ReportDailyService;
import org.trams.hello.business.service.mapping.ReportDailyServiceMapper;
import org.trams.hello.data.repository.jpa.ReportDailyJpaRepository;
/**
 * Implementation of ReportDailyService
 */
@Component
@Transactional
public class ReportDailyServiceImpl implements ReportDailyService {

	@Resource
	private ReportDailyJpaRepository reportDailyJpaRepository;

	private static final Integer PAGE_SIZE   = 15;

	@Resource
	private ReportDailyServiceMapper reportDailyServiceMapper;
	
	@Override
	public ReportDaily findById(Integer id) {
		ReportDailyEntity reportDailyEntity = reportDailyJpaRepository.findOne(id);
		return reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntity);
	}

	@Override
	public Page<ReportDailyEntity> findAll(Integer pageNumber) {

		PageRequest request = new PageRequest(pageNumber - 1, PAGE_SIZE,
				new Sort(new Order(Direction.DESC, "id")));
		return reportDailyJpaRepository.findAll(request);
	}

	@Override
	public List<ReportDaily> findAll() {
		Iterable<ReportDailyEntity> entities = reportDailyJpaRepository.findAll();
		List<ReportDaily> beans = new ArrayList<ReportDaily>();
		for(ReportDailyEntity reportDailyEntity : entities) {
			beans.add(reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntity));
		}
		return beans;
	}

	/**
	 * Count total entit
	 * @return Long
	 */
	public Long countTotal(){
		Long count = reportDailyJpaRepository.count();
		return count;
	}

	@Override
	public ReportDaily save(ReportDaily reportDaily) {
		return update(reportDaily) ;
	}

	@Override
	public ReportDaily create(ReportDaily reportDaily) {
/*
		ReportDailyEntity reportDailyEntity = reportDailyJpaRepository.findOne(reportDaily.getId());
		if( reportDailyEntity != null ) {
			throw new IllegalStateException("already.exists");
		}

		reportDailyEntity = new ReportDailyEntity();
		reportDailyServiceMapper.mapReportDailyToReportDailyEntity(reportDaily, reportDailyEntity);
		ReportDailyEntity reportDailyEntitySaved = reportDailyJpaRepository.save(reportDailyEntity);
		return reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntitySaved);
*/
		ReportDailyEntity reportDailyEntity = new ReportDailyEntity();
		reportDailyServiceMapper.mapReportDailyToReportDailyEntity(reportDaily, reportDailyEntity);
		ReportDailyEntity reportDailyEntitySaved = reportDailyJpaRepository.save(reportDailyEntity);
		return reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntitySaved);
	}

	@Override
	public ReportDaily update(ReportDaily reportDaily) {
		ReportDailyEntity reportDailyEntity = reportDailyJpaRepository.findOne(reportDaily.getId());
		reportDailyServiceMapper.mapReportDailyToReportDailyEntity(reportDaily, reportDailyEntity);
		ReportDailyEntity reportDailyEntitySaved = reportDailyJpaRepository.save(reportDailyEntity);
		return reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		reportDailyJpaRepository.delete(id);
	}

	public ReportDailyJpaRepository getReportDailyJpaRepository() {
		return reportDailyJpaRepository;
	}

	public void setReportDailyJpaRepository(ReportDailyJpaRepository reportDailyJpaRepository) {
		this.reportDailyJpaRepository = reportDailyJpaRepository;
	}

	public ReportDailyServiceMapper getReportDailyServiceMapper() {
		return reportDailyServiceMapper;
	}

	public void setReportDailyServiceMapper(ReportDailyServiceMapper reportDailyServiceMapper) {
		this.reportDailyServiceMapper = reportDailyServiceMapper;
	}

	@Override
	public Page<ReportDailyEntity> listPaging(Integer page, Integer size) {
		try {
			PageRequest pageable = new PageRequest(page-1, size, new Sort(new Order(Direction.DESC, "createDate")));
			return reportDailyJpaRepository.listPaging(pageable);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public List<ReportDailyEntity> findReportByCreateDate(Date date) {
		try {
			return reportDailyJpaRepository.findReportByCreateDate(date);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public ReportDaily findByCreateDate(Date date) {
		ReportDailyEntity reportDailyEntity = reportDailyJpaRepository.findByCreateDate(date);
		return reportDailyServiceMapper.mapReportDailyEntityToReportDaily(reportDailyEntity);
	}
	
	


}
