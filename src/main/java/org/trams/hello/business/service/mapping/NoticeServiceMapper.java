/*
 * Created on 17 May 2017 ( Time 10:31:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.Notice;
import org.trams.hello.bean.jpa.BusinessEntity;
import org.trams.hello.bean.jpa.NoticeEntity;
import org.trams.hello.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class NoticeServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public NoticeServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'NoticeEntity' to 'Notice'
	 * @param noticeEntity
	 */
	public Notice mapNoticeEntityToNotice(NoticeEntity noticeEntity) {
		if(noticeEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Notice notice = map(noticeEntity, Notice.class);

		//--- Link mapping ( link to User )
		if(noticeEntity.getUser() != null) {
			notice.setAdminId(noticeEntity.getUser().getId());
		}
		//--- Link mapping ( link to Business )
		if(noticeEntity.getBusiness() != null) {
			notice.setBusinessId(noticeEntity.getBusiness().getId());
		}
		return notice;
	}
	
	/**
	 * Mapping from 'Notice' to 'NoticeEntity'
	 * @param notice
	 * @param noticeEntity
	 */
	public void mapNoticeToNoticeEntity(Notice notice, NoticeEntity noticeEntity) {
		if(notice == null) {
			return;
		}

		//--- Generic mapping 
		map(notice, noticeEntity);

		//--- Link mapping ( link : notice )
		if( hasLinkToUser(notice) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( notice.getAdminId() );
			noticeEntity.setUser( user1 );
		} else {
			noticeEntity.setUser( null );
		}

		//--- Link mapping ( link : notice )
		if( hasLinkToBusiness(notice) ) {
			BusinessEntity business2 = new BusinessEntity();
			business2.setId( notice.getBusinessId() );
			noticeEntity.setBusiness( business2 );
		} else {
			noticeEntity.setBusiness( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(Notice notice) {
		if(notice.getAdminId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Business id is valid.
	 * @param Business Business
	 * @return boolean
	 */
	private boolean hasLinkToBusiness(Notice notice) {
		if(notice.getBusinessId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}