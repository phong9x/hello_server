/*
 * Created on 1 thg 12 2016 ( Time 15:28:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.Answer;
import org.trams.hello.bean.jpa.AnswerEntity;
import org.trams.hello.bean.jpa.QuestionEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AnswerServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public AnswerServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'AnswerEntity' to 'Answer'
	 * @param answerEntity
	 */
	public Answer mapAnswerEntityToAnswer(AnswerEntity answerEntity) {
		if(answerEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Answer answer = map(answerEntity, Answer.class);

		//--- Link mapping ( link to Question )
		if(answerEntity.getQuestion() != null) {
			answer.setQuestionId(answerEntity.getQuestion().getId());
		}
		return answer;
	}
	
	/**
	 * Mapping from 'Answer' to 'AnswerEntity'
	 * @param answer
	 * @param answerEntity
	 */
	public void mapAnswerToAnswerEntity(Answer answer, AnswerEntity answerEntity) {
		if(answer == null) {
			return;
		}

		//--- Generic mapping 
		map(answer, answerEntity);

		//--- Link mapping ( link : answer )
		if( hasLinkToQuestion(answer) ) {
			QuestionEntity question1 = new QuestionEntity();
			question1.setId( answer.getQuestionId() );
			answerEntity.setQuestion( question1 );
		} else {
			answerEntity.setQuestion( null );
		}

	}
	
	/**
	 * Verify that Question id is valid.
	 * @param Question Question
	 * @return boolean
	 */
	private boolean hasLinkToQuestion(Answer answer) {
		if(answer.getQuestionId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}