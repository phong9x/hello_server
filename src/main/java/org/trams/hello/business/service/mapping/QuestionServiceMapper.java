/*
 * Created on 22 thg 2 2017 ( Time 10:36:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.Question;
import org.trams.hello.bean.jpa.QuestionEntity;
import org.trams.hello.bean.jpa.QuestionnaireEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class QuestionServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public QuestionServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'QuestionEntity' to 'Question'
	 * @param questionEntity
	 */
	public Question mapQuestionEntityToQuestion(QuestionEntity questionEntity) {
		if(questionEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Question question = map(questionEntity, Question.class);

		//--- Link mapping ( link to Questionnaire )
		if(questionEntity.getQuestionnaire() != null) {
			question.setQuestionaireId(questionEntity.getQuestionnaire().getId());
		}
		return question;
	}
	
	/**
	 * Mapping from 'Question' to 'QuestionEntity'
	 * @param question
	 * @param questionEntity
	 */
	public void mapQuestionToQuestionEntity(Question question, QuestionEntity questionEntity) {
		if(question == null) {
			return;
		}

		//--- Generic mapping 
		map(question, questionEntity);

		//--- Link mapping ( link : question )
		if( hasLinkToQuestionnaire(question) ) {
			QuestionnaireEntity questionnaire1 = new QuestionnaireEntity();
			questionnaire1.setId( question.getQuestionaireId() );
			questionEntity.setQuestionnaire( questionnaire1 );
		} else {
			questionEntity.setQuestionnaire( null );
		}

	}
	
	/**
	 * Verify that Questionnaire id is valid.
	 * @param Questionnaire Questionnaire
	 * @return boolean
	 */
	private boolean hasLinkToQuestionnaire(Question question) {
		if(question.getQuestionaireId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}