/*
 * Created on 7 Mar 2017 ( Time 09:52:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.CounselorScheduleSetting;
import org.trams.hello.bean.jpa.CounselorEntity;
import org.trams.hello.bean.jpa.CounselorScheduleSettingEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class CounselorScheduleSettingServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public CounselorScheduleSettingServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'CounselorScheduleSettingEntity' to 'CounselorScheduleSetting'
	 * @param counselorScheduleSettingEntity
	 */
	public CounselorScheduleSetting mapCounselorScheduleSettingEntityToCounselorScheduleSetting(CounselorScheduleSettingEntity counselorScheduleSettingEntity) {
		if(counselorScheduleSettingEntity == null) {
			return null;
		}

		//--- Generic mapping 
		CounselorScheduleSetting counselorScheduleSetting = map(counselorScheduleSettingEntity, CounselorScheduleSetting.class);

		//--- Link mapping ( link to Counselor )
		if(counselorScheduleSettingEntity.getCounselor() != null) {
			counselorScheduleSetting.setCounselorId(counselorScheduleSettingEntity.getCounselor().getId());
		}
		return counselorScheduleSetting;
	}
	
	/**
	 * Mapping from 'CounselorScheduleSetting' to 'CounselorScheduleSettingEntity'
	 * @param counselorScheduleSetting
	 * @param counselorScheduleSettingEntity
	 */
	public void mapCounselorScheduleSettingToCounselorScheduleSettingEntity(CounselorScheduleSetting counselorScheduleSetting, CounselorScheduleSettingEntity counselorScheduleSettingEntity) {
		if(counselorScheduleSetting == null) {
			return;
		}

		//--- Generic mapping 
		map(counselorScheduleSetting, counselorScheduleSettingEntity);

		//--- Link mapping ( link : counselorScheduleSetting )
		if( hasLinkToCounselor(counselorScheduleSetting) ) {
			CounselorEntity counselor1 = new CounselorEntity();
			counselor1.setId( counselorScheduleSetting.getCounselorId() );
			counselorScheduleSettingEntity.setCounselor( counselor1 );
		} else {
			counselorScheduleSettingEntity.setCounselor( null );
		}

	}
	
	/**
	 * Verify that Counselor id is valid.
	 * @param Counselor Counselor
	 * @return boolean
	 */
	private boolean hasLinkToCounselor(CounselorScheduleSetting counselorScheduleSetting) {
		if(counselorScheduleSetting.getCounselorId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}