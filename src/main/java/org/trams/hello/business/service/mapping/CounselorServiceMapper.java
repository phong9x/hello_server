/*
 * Created on 28 Apr 2017 ( Time 14:32:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.Counselor;
import org.trams.hello.bean.jpa.BankEntity;
import org.trams.hello.bean.jpa.CounselingCenterEntity;
import org.trams.hello.bean.jpa.CounselorEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class CounselorServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public CounselorServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'CounselorEntity' to 'Counselor'
	 * @param counselorEntity
	 */
	public Counselor mapCounselorEntityToCounselor(CounselorEntity counselorEntity) {
		if(counselorEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Counselor counselor = map(counselorEntity, Counselor.class);

		//--- Link mapping ( link to Bank )
		if(counselorEntity.getBank() != null) {
			counselor.setBankId(counselorEntity.getBank().getId());
		}
		//--- Link mapping ( link to CounselingCenter )
		if(counselorEntity.getCounselingCenter() != null) {
			counselor.setCounselorCenterId(counselorEntity.getCounselingCenter().getId());
		}
		return counselor;
	}
	
	/**
	 * Mapping from 'Counselor' to 'CounselorEntity'
	 * @param counselor
	 * @param counselorEntity
	 */
	public void mapCounselorToCounselorEntity(Counselor counselor, CounselorEntity counselorEntity) {
		if(counselor == null) {
			return;
		}

		//--- Generic mapping 
		map(counselor, counselorEntity);

		//--- Link mapping ( link : counselor )
		if( hasLinkToBank(counselor) ) {
			BankEntity bank1 = new BankEntity();
			bank1.setId( counselor.getBankId() );
			counselorEntity.setBank( bank1 );
		} else {
			counselorEntity.setBank( null );
		}

		//--- Link mapping ( link : counselor )
		if( hasLinkToCounselingCenter(counselor) ) {
			CounselingCenterEntity counselingCenter2 = new CounselingCenterEntity();
			counselingCenter2.setId( counselor.getCounselorCenterId() );
			counselorEntity.setCounselingCenter( counselingCenter2 );
		} else {
			counselorEntity.setCounselingCenter( null );
		}

	}
	
	/**
	 * Verify that Bank id is valid.
	 * @param Bank Bank
	 * @return boolean
	 */
	private boolean hasLinkToBank(Counselor counselor) {
		if(counselor.getBankId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that CounselingCenter id is valid.
	 * @param CounselingCenter CounselingCenter
	 * @return boolean
	 */
	private boolean hasLinkToCounselingCenter(Counselor counselor) {
		if(counselor.getCounselorCenterId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}