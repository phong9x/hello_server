/*
 * Created on 22 Mar 2017 ( Time 15:53:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.trams.hello.bean.SelfDiagnosisResults;
import org.trams.hello.bean.jpa.SelfDiagnosisResultsEntity;
import org.trams.hello.business.service.SelfDiagnosisResultsService;
import org.trams.hello.business.service.mapping.SelfDiagnosisResultsServiceMapper;
import org.trams.hello.data.repository.jpa.SelfDiagnosisResultsJpaRepository;
/**
 * Implementation of SelfDiagnosisResultsService
 */
@Component
@Transactional
public class SelfDiagnosisResultsServiceImpl implements SelfDiagnosisResultsService {

	@Resource
	private SelfDiagnosisResultsJpaRepository selfDiagnosisResultsJpaRepository;

	private static final Integer PAGE_SIZE   = 15;

	@Resource
	private SelfDiagnosisResultsServiceMapper selfDiagnosisResultsServiceMapper;
	
	@Override
	public SelfDiagnosisResults findById(Integer id) {
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntity = selfDiagnosisResultsJpaRepository.findOne(id);
		return selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntity);
	}

	@Override
	public Page<SelfDiagnosisResultsEntity> findAll(Integer pageNumber) {

		PageRequest request = new PageRequest(pageNumber - 1, PAGE_SIZE,
				new Sort(new Order(Direction.DESC, "id")));
		return selfDiagnosisResultsJpaRepository.findAll(request);
	}

	@Override
	public List<SelfDiagnosisResults> findAll() {
		Iterable<SelfDiagnosisResultsEntity> entities = selfDiagnosisResultsJpaRepository.findAll();
		List<SelfDiagnosisResults> beans = new ArrayList<SelfDiagnosisResults>();
		for(SelfDiagnosisResultsEntity selfDiagnosisResultsEntity : entities) {
			beans.add(selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntity));
		}
		return beans;
	}

	/**
	 * Count total entit
	 * @return Long
	 */
	public Long countTotal(){
		Long count = selfDiagnosisResultsJpaRepository.count();
		return count;
	}

	@Override
	public SelfDiagnosisResults save(SelfDiagnosisResults selfDiagnosisResults) {
		return update(selfDiagnosisResults) ;
	}

	@Override
	public SelfDiagnosisResults create(SelfDiagnosisResults selfDiagnosisResults) {
/*
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntity = selfDiagnosisResultsJpaRepository.findOne(selfDiagnosisResults.getId());
		if( selfDiagnosisResultsEntity != null ) {
			throw new IllegalStateException("already.exists");
		}

		selfDiagnosisResultsEntity = new SelfDiagnosisResultsEntity();
		selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsToSelfDiagnosisResultsEntity(selfDiagnosisResults, selfDiagnosisResultsEntity);
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntitySaved = selfDiagnosisResultsJpaRepository.save(selfDiagnosisResultsEntity);
		return selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntitySaved);
*/
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntity = new SelfDiagnosisResultsEntity();
		selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsToSelfDiagnosisResultsEntity(selfDiagnosisResults, selfDiagnosisResultsEntity);
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntitySaved = selfDiagnosisResultsJpaRepository.save(selfDiagnosisResultsEntity);
		return selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntitySaved);
	}

	@Override
	public SelfDiagnosisResults update(SelfDiagnosisResults selfDiagnosisResults) {
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntity = selfDiagnosisResultsJpaRepository.findOne(selfDiagnosisResults.getId());
		selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsToSelfDiagnosisResultsEntity(selfDiagnosisResults, selfDiagnosisResultsEntity);
		SelfDiagnosisResultsEntity selfDiagnosisResultsEntitySaved = selfDiagnosisResultsJpaRepository.save(selfDiagnosisResultsEntity);
		return selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		selfDiagnosisResultsJpaRepository.delete(id);
	}

	public SelfDiagnosisResultsJpaRepository getSelfDiagnosisResultsJpaRepository() {
		return selfDiagnosisResultsJpaRepository;
	}

	public void setSelfDiagnosisResultsJpaRepository(SelfDiagnosisResultsJpaRepository selfDiagnosisResultsJpaRepository) {
		this.selfDiagnosisResultsJpaRepository = selfDiagnosisResultsJpaRepository;
	}

	public SelfDiagnosisResultsServiceMapper getSelfDiagnosisResultsServiceMapper() {
		return selfDiagnosisResultsServiceMapper;
	}

	public void setSelfDiagnosisResultsServiceMapper(SelfDiagnosisResultsServiceMapper selfDiagnosisResultsServiceMapper) {
		this.selfDiagnosisResultsServiceMapper = selfDiagnosisResultsServiceMapper;
	}

	@Override
	public Page<SelfDiagnosisResultsEntity> listPaging(Integer page, Integer size) {
		try {
			PageRequest pageable = new PageRequest(page-1, size, new Sort(new Order(Direction.DESC, "createDate")));
			return selfDiagnosisResultsJpaRepository.listPaging(pageable);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public SelfDiagnosisResults findSelfDiagnosisResultsByPoint(Float point, Integer questionaireId) {
		SelfDiagnosisResultsEntity entity = selfDiagnosisResultsJpaRepository.findSelfDiagnosisResultsByPoint(point, questionaireId);
		return selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(entity);
	}

	@Override
	public List<SelfDiagnosisResults> listSelfDiagnosisResultsByPoint(Integer questionaireId) {
		try {
			List<SelfDiagnosisResultsEntity> entities = selfDiagnosisResultsJpaRepository.listSelfDiagnosisResultsByPoint(questionaireId);
			List<SelfDiagnosisResults> beans = new ArrayList<SelfDiagnosisResults>();
			for(SelfDiagnosisResultsEntity selfDiagnosisResultsEntity : entities) {
				beans.add(selfDiagnosisResultsServiceMapper.mapSelfDiagnosisResultsEntityToSelfDiagnosisResults(selfDiagnosisResultsEntity));
			}
			return beans;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
}
