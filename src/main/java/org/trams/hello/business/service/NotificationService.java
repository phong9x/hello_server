/*
 * Created on 11 thg 1 2017 ( Time 10:17:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service;

import java.util.List;
import java.util.Map;

import org.springframework.data.domain.Page;
import org.trams.hello.bean.Notification;
import org.trams.hello.bean.jpa.NotificationEntity;
import org.trams.hello.bean.jpa.PushNotificationEntity;
import org.trams.hello.bean.jpa.UserEntity;

/**
 * Business Service Interface for entity Notification.
 */
public interface NotificationService { 

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	Notification findById( Integer id  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<Notification> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<NotificationEntity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	Notification save(Notification entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	Notification update(Notification entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	Notification create(Notification entity);
	
	/**
	 * Deletes an entity using its Primary Key
	 * @param id
	 */
	void delete( Integer id );

	Page<NotificationEntity> listPaging(Integer page,Integer size);
	
	Page<NotificationEntity> findByTitle(String title, Integer page, Integer size);

	long countNotification(Map<String, Object> params);

	Page<NotificationEntity> filter(Map<String, Object> params);
	
	void createNotification(UserEntity user,String identity, String title, String message, Integer pageId, Short type, Integer counselorId);
	
	void createNotificationUsers(Integer userId,String identity, String title, String message, Integer pageId, Short type, Integer counselorId);
	
	List<NotificationEntity> getListNotificationByNotifiId(Integer userId, Integer offSet, Integer defaulElement);
	
	NotificationEntity findByNotifiId(Integer notifiId);
	
	Integer countListNotificationByNotifiId(Integer userId);
	
	Integer countNewestNotificationByNotifiId(Integer userId);
	
	Notification createByPush(PushNotificationEntity p);
	
}
