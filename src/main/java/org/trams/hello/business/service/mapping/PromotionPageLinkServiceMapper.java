/*
 * Created on 28 Mar 2017 ( Time 16:24:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.PromotionPageLink;
import org.trams.hello.bean.jpa.PromotionPageEntity;
import org.trams.hello.bean.jpa.PromotionPageLinkEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PromotionPageLinkServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PromotionPageLinkServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PromotionPageLinkEntity' to 'PromotionPageLink'
	 * @param promotionPageLinkEntity
	 */
	public PromotionPageLink mapPromotionPageLinkEntityToPromotionPageLink(PromotionPageLinkEntity promotionPageLinkEntity) {
		if(promotionPageLinkEntity == null) {
			return null;
		}

		//--- Generic mapping 
		PromotionPageLink promotionPageLink = map(promotionPageLinkEntity, PromotionPageLink.class);

		//--- Link mapping ( link to PromotionPage )
		if(promotionPageLinkEntity.getPromotionPage() != null) {
			promotionPageLink.setPromotionPageId(promotionPageLinkEntity.getPromotionPage().getId());
		}
		return promotionPageLink;
	}
	
	/**
	 * Mapping from 'PromotionPageLink' to 'PromotionPageLinkEntity'
	 * @param promotionPageLink
	 * @param promotionPageLinkEntity
	 */
	public void mapPromotionPageLinkToPromotionPageLinkEntity(PromotionPageLink promotionPageLink, PromotionPageLinkEntity promotionPageLinkEntity) {
		if(promotionPageLink == null) {
			return;
		}

		//--- Generic mapping 
		map(promotionPageLink, promotionPageLinkEntity);

		//--- Link mapping ( link : promotionPageLink )
		if( hasLinkToPromotionPage(promotionPageLink) ) {
			PromotionPageEntity promotionPage1 = new PromotionPageEntity();
			promotionPage1.setId( promotionPageLink.getPromotionPageId() );
			promotionPageLinkEntity.setPromotionPage( promotionPage1 );
		} else {
			promotionPageLinkEntity.setPromotionPage( null );
		}

	}
	
	/**
	 * Verify that PromotionPage id is valid.
	 * @param PromotionPage PromotionPage
	 * @return boolean
	 */
	private boolean hasLinkToPromotionPage(PromotionPageLink promotionPageLink) {
		if(promotionPageLink.getPromotionPageId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}