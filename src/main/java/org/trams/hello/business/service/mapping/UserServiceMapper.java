/*
 * Created on 15 May 2017 ( Time 14:52:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.User;
import org.trams.hello.bean.jpa.BusinessSubEntity;
import org.trams.hello.bean.jpa.UserEntity;
import org.trams.hello.bean.jpa.UserRoleEntity;
import org.trams.hello.bean.jpa.VersionAppEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UserServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UserServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UserEntity' to 'User'
	 * @param userEntity
	 */
	public User mapUserEntityToUser(UserEntity userEntity) {
		if(userEntity == null) {
			return null;
		}

		//--- Generic mapping 
		User user = map(userEntity, User.class);

		//--- Link mapping ( link to VersionApp )
		if(userEntity.getVersionApp() != null) {
			user.setAppVesionId(userEntity.getVersionApp().getId());
		}
		//--- Link mapping ( link to UserRole )
		if(userEntity.getUserRole() != null) {
			user.setRoleId(userEntity.getUserRole().getId());
		}
		//--- Link mapping ( link to BusinessSub )
		if(userEntity.getBusinessSub() != null) {
			user.setBusinessSubId(userEntity.getBusinessSub().getId());
		}
		return user;
	}
	
	/**
	 * Mapping from 'User' to 'UserEntity'
	 * @param user
	 * @param userEntity
	 */
	public void mapUserToUserEntity(User user, UserEntity userEntity) {
		if(user == null) {
			return;
		}

		//--- Generic mapping 
		map(user, userEntity);

		//--- Link mapping ( link : user )
		if( hasLinkToVersionApp(user) ) {
			VersionAppEntity versionApp1 = new VersionAppEntity();
			versionApp1.setId( user.getAppVesionId() );
			userEntity.setVersionApp( versionApp1 );
		} else {
			userEntity.setVersionApp( null );
		}

		//--- Link mapping ( link : user )
		if( hasLinkToUserRole(user) ) {
			UserRoleEntity userRole2 = new UserRoleEntity();
			userRole2.setId( user.getRoleId() );
			userEntity.setUserRole( userRole2 );
		} else {
			userEntity.setUserRole( null );
		}

		//--- Link mapping ( link : user )
		if( hasLinkToBusinessSub(user) ) {
			BusinessSubEntity businessSub3 = new BusinessSubEntity();
			businessSub3.setId( user.getBusinessSubId() );
			userEntity.setBusinessSub( businessSub3 );
		} else {
			userEntity.setBusinessSub( null );
		}

	}
	
	/**
	 * Verify that VersionApp id is valid.
	 * @param VersionApp VersionApp
	 * @return boolean
	 */
	private boolean hasLinkToVersionApp(User user) {
		if(user.getAppVesionId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that UserRole id is valid.
	 * @param UserRole UserRole
	 * @return boolean
	 */
	private boolean hasLinkToUserRole(User user) {
		if(user.getRoleId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that BusinessSub id is valid.
	 * @param BusinessSub BusinessSub
	 * @return boolean
	 */
	private boolean hasLinkToBusinessSub(User user) {
		if(user.getBusinessSubId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}