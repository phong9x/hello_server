/*
 * Created on 12 Apr 2017 ( Time 16:10:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.UserPsychologicalFile;
import org.trams.hello.bean.jpa.UserPsychologicalEntity;
import org.trams.hello.bean.jpa.UserPsychologicalFileEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UserPsychologicalFileServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UserPsychologicalFileServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UserPsychologicalFileEntity' to 'UserPsychologicalFile'
	 * @param userPsychologicalFileEntity
	 */
	public UserPsychologicalFile mapUserPsychologicalFileEntityToUserPsychologicalFile(UserPsychologicalFileEntity userPsychologicalFileEntity) {
		if(userPsychologicalFileEntity == null) {
			return null;
		}

		//--- Generic mapping 
		UserPsychologicalFile userPsychologicalFile = map(userPsychologicalFileEntity, UserPsychologicalFile.class);

		//--- Link mapping ( link to UserPsychological )
		if(userPsychologicalFileEntity.getUserPsychological() != null) {
			userPsychologicalFile.setUserPsychologicalId(userPsychologicalFileEntity.getUserPsychological().getId());
		}
		return userPsychologicalFile;
	}
	
	/**
	 * Mapping from 'UserPsychologicalFile' to 'UserPsychologicalFileEntity'
	 * @param userPsychologicalFile
	 * @param userPsychologicalFileEntity
	 */
	public void mapUserPsychologicalFileToUserPsychologicalFileEntity(UserPsychologicalFile userPsychologicalFile, UserPsychologicalFileEntity userPsychologicalFileEntity) {
		if(userPsychologicalFile == null) {
			return;
		}

		//--- Generic mapping 
		map(userPsychologicalFile, userPsychologicalFileEntity);

		//--- Link mapping ( link : userPsychologicalFile )
		if( hasLinkToUserPsychological(userPsychologicalFile) ) {
			UserPsychologicalEntity userPsychological1 = new UserPsychologicalEntity();
			userPsychological1.setId( userPsychologicalFile.getUserPsychologicalId() );
			userPsychologicalFileEntity.setUserPsychological( userPsychological1 );
		} else {
			userPsychologicalFileEntity.setUserPsychological( null );
		}

	}
	
	/**
	 * Verify that UserPsychological id is valid.
	 * @param UserPsychological UserPsychological
	 * @return boolean
	 */
	private boolean hasLinkToUserPsychological(UserPsychologicalFile userPsychologicalFile) {
		if(userPsychologicalFile.getUserPsychologicalId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}