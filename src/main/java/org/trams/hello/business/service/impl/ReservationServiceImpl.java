/*
 * Created on 14 Apr 2017 ( Time 09:58:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.trams.hello.bean.web.admin.ReservationRow;
import org.trams.hello.business.service.ReservationService;
import org.trams.hello.web.bean.search.SearchCommon;
import org.trams.hello.web.bean.search.SearchReservation;
import org.trams.hello.web.common.utils.DataUtils;

@Component
@Transactional
public class ReservationServiceImpl implements ReservationService {

	@Autowired
	private EntityManager em;

	@Override
	public List<ReservationRow> searchReservationList(SearchReservation searchReservation, Integer pageSize) {
		Query query = getReservationQuery("list", searchReservation, pageSize);

		@SuppressWarnings("unchecked")
		List<Object[]> result = query.getResultList();

		List<ReservationRow> list = new ArrayList<ReservationRow>();

		for (Object[] i : result) {
			ReservationRow r = new ReservationRow();
			r.setId((Integer) i[0]);
			r.setUserName((String) i[1]);
			r.setUserRoleId((Integer) i[2]);
			r.setBusinessName((String) i[3]);
			r.setManageYear((Integer) i[4]);
			r.setBusinessSubName((String) i[5]);
			r.setCounselorName((String) i[6]);
			r.setCreateDate((Date) i[7]);
			r.setStartTime((Date) i[8]);
			r.setRemainTime((String) i[9]);
			r.setTypeCoin((Integer) i[10]);
			r.setStatus((Short) i[11]);
			list.add(r);
		}

		return list;
	}

	@Override
	public Long reservationListCount(SearchReservation searchReservation) {
		Query query = getReservationQuery("count", searchReservation, 0);
		Long result = ((Number) query.getSingleResult()).longValue();
		return result;
	}

	private Query getReservationQuery(String type, SearchReservation searchReservation, Integer size) {

		String selectList = "SELECT  CS.id as id, " + "U.fullname as fullname, " + "U.role_id as role_id, "
				+ "BSB.business_name, " + "BSB.manage_year, " + "BSB.business_sub_name, "
				+ "(SELECT fullname FROM user WHERE id = CS.counselor_id) as counselor_name, " + "CS.create_date, "
				+ "CS.start_time, " + "IF(TIMESTAMPDIFF( SECOND , NOW(), CS.start_time ) >= 3600, "
				+ "TIME_FORMAT(SEC_TO_TIME(TIMESTAMPDIFF( SECOND , NOW(), CS.start_time )), '%H시간 %i분'), "
				+ "TIME_FORMAT(SEC_TO_TIME(TIMESTAMPDIFF( SECOND , NOW(), CS.start_time )), '%i분 %s초')) as remain_time, "
				+ "(SELECT type_coin FROM payment_history WHERE id = CS.payment_id) as type_coin, " + "CS.status ";

		String from = "FROM (SELECT id, user_id, counselor_id, payment_id, start_time, end_time, status, create_date, counsel_type "
				+ "FROM counseling_session " + "WHERE start_time > NOW()) CS " + "JOIN user U "
				+ "ON CS.user_id = U.id " + "LEFT JOIN user_business UB " + "ON U.id = UB.user_id "
				+ "LEFT JOIN (SELECT B.id as business_id, BS.id as business_sub_id, B.business_name as business_name, BS.manage_year as manage_year, BS.business_sub_name as business_sub_name "
				+ "FROM business_sub BS, business B " + "WHERE BS.business_id = B.id) BSB "
				+ "ON UB.business_sub_id = BSB.business_sub_id ";

		String where = "WHERE CS.counsel_type = 2 ";

		String queryString = "";

		queryString += selectList + from + where;

		// add search condition
		// start and end date

		if (searchReservation.getStartDate() != null) {
			queryString += " AND DATE_FORMAT(CS.create_date, '%Y-%m-%d') >= '" + searchReservation.getStartDate() + "'";
		}
		if (searchReservation.getEndDate() != null) {
			queryString += " AND DATE_FORMAT(CS.create_date, '%Y-%m-%d') <= '" + searchReservation.getEndDate() + "'";
		}
		// user type
		if (searchReservation.isIndividual() || searchReservation.isBusiness()) {
			if(searchReservation.isIndividual() && searchReservation.isBusiness()){
				queryString += " AND U.role_id = 1 or ( U.role_id = 5";
				if (searchReservation.getBusinessId() > 0) {
					queryString += " AND BSB.business_id = " + searchReservation.getBusinessId();
				}
				if (searchReservation.getManageYear() > 0) {
					queryString += " AND BSB.manage_year = " + searchReservation.getManageYear();
				}
				if (searchReservation.getBusinessSubId() > 0) {
					queryString += " AND BSB.business_sub_id = " + searchReservation.getBusinessSubId();
				}
				queryString +=")";
			}else if (searchReservation.isIndividual()) {
				queryString += " AND U.role_id = 1";
			}else if (searchReservation.isBusiness()) {
				queryString += " AND U.role_id = 5";
				// business info
				if (searchReservation.getBusinessId() > 0) {
					queryString += " AND BSB.business_id = " + searchReservation.getBusinessId();
				}
				if (searchReservation.getManageYear() > 0) {
					queryString += " AND BSB.manage_year = " + searchReservation.getManageYear();
				}
				if (searchReservation.getBusinessSubId() > 0) {
					queryString += " AND BSB.business_sub_id = " + searchReservation.getBusinessSubId();
				}
			}
		} else {
			queryString += " AND U.role_id in (1,5)";
		}

		// os type
		if (searchReservation.isAndroid()) {
			queryString += " AND U.os_name = 'android'";
		}
		if (searchReservation.isiOS()) {
			queryString += " AND U.os_name = 'iOS'";
		}

		// status
		if(searchReservation.isResvComplete() == searchReservation.isResvCancel()){
			queryString += " AND CS.status in (0,1) ";
		}else{
			if (searchReservation.isResvComplete()) {
				queryString += " AND CS.status = 1";
			}
			if (searchReservation.isResvCancel()) {
				queryString += " AND CS.status = 0";
			}
		}
		

		// order
		String orderBy = " ORDER BY ";

		if (searchReservation.getOrder() != null) {
			String order = searchReservation.getOrder();
			if ("createDate".equals(order)) {
				orderBy += "create_date DESC ";
			} else if ("startTime".equals(order)) {
				orderBy += "start_time ASC ";
			} else if ("memberName".equals(order)) {
				orderBy += "fullname ASC ";
			} else if ("counselorName".equals(order)) {
				orderBy += "counselor_name ASC ";
			}
		}

		queryString = "SELECT * FROM (" + queryString + ") AA WHERE 1=1 ";

		// payment type
		if (searchReservation.isVoucher()) {
			queryString += " AND type_coin = 3";
		}
		if (searchReservation.isCoin()) {
			queryString += " AND type_coin = 1 ";
		}

		// keyword
		SearchCommon common = searchReservation.getCommon();
		if (common.getKeyWord() != null) {
			String key = common.getType();
			String keyWord = "%" + common.getKeyWord() + "%";
			if ("member".equals(key)) {
				queryString += " AND fullname like '" + keyWord + "' ";
			} else if ("counselor".equals(key)) {
				queryString += " AND counselor_name like '" + keyWord + "' ";
			}
		}

		// end search condition

		if ("list".equals(type)) {
			Integer offset = DataUtils.getOffset(searchReservation.getCommon().getPage(), size);
			String limit = " LIMIT " + offset + ", " + size;
			queryString += orderBy + limit;
		} else if ("count".equals(type)) {
			queryString = "SELECT COUNT(*) FROM (" + queryString + ") AAA";
		}

		Query query = em.createNativeQuery(queryString);

		return query;
	}

}
