/*
 * Created on 7 Apr 2017 ( Time 17:33:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.hello.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.hello.bean.Message;
import org.trams.hello.bean.jpa.MessageEntity;
import org.trams.hello.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class MessageServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public MessageServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'MessageEntity' to 'Message'
	 * @param messageEntity
	 */
	public Message mapMessageEntityToMessage(MessageEntity messageEntity) {
		if(messageEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Message message = map(messageEntity, Message.class);

		//--- Link mapping ( link to User )
		if(messageEntity.getUser() != null) {
			message.setSendUserId(messageEntity.getUser().getId());
		}
		return message;
	}
	
	/**
	 * Mapping from 'Message' to 'MessageEntity'
	 * @param message
	 * @param messageEntity
	 */
	public void mapMessageToMessageEntity(Message message, MessageEntity messageEntity) {
		if(message == null) {
			return;
		}

		//--- Generic mapping 
		map(message, messageEntity);

		//--- Link mapping ( link : message )
		if( hasLinkToUser(message) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( message.getSendUserId() );
			messageEntity.setUser( user1 );
		} else {
			messageEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(Message message) {
		if(message.getSendUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}