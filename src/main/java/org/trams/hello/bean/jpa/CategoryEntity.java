/*
 * Created on 14 Apr 2017 ( Time 15:35:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "category"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="category", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CategoryEntity.countAll", query="SELECT COUNT(x) FROM CategoryEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class CategoryEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="parent_id")
    private Integer    parentId     ;

    @Column(name="category_name", nullable=false, length=100)
    private String     categoryName ;

    @Column(name="decription", length=100)
    private String     decription   ;

    @Column(name="comment", length=100)
    private String     comment      ;

    @Column(name="image_check_url", length=300)
    private String     imageCheckUrl ;

    @Column(name="image_uncheck_url", length=300)
    private String     imageUncheckUrl ;

    @Column(name="type", nullable=false)
    private Short      type         ;

    @Column(name="is_show", nullable=false)
    private Short      isShow       ;

    @Column(name="relate_category_id", nullable=false)
    private Integer    relateCategoryId ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="status", nullable=false)
    private Integer    status       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="category2", targetEntity=PaymentHistoryEntity.class)
    private List<PaymentHistoryEntity> listOfPaymentHistory2;

	@JsonIgnore
    @OneToMany(mappedBy="category", targetEntity=PaymentHistoryEntity.class)
    private List<PaymentHistoryEntity> listOfPaymentHistory;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CategoryEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : parent_id ( INT ) 
    public void setParentId( Integer parentId ) {
        this.parentId = parentId;
    }
    public Integer getParentId() {
        return this.parentId;
    }

    //--- DATABASE MAPPING : category_name ( VARCHAR ) 
    public void setCategoryName( String categoryName ) {
        this.categoryName = categoryName;
    }
    public String getCategoryName() {
        return this.categoryName;
    }

    //--- DATABASE MAPPING : decription ( VARCHAR ) 
    public void setDecription( String decription ) {
        this.decription = decription;
    }
    public String getDecription() {
        return this.decription;
    }

    //--- DATABASE MAPPING : comment ( VARCHAR ) 
    public void setComment( String comment ) {
        this.comment = comment;
    }
    public String getComment() {
        return this.comment;
    }

    //--- DATABASE MAPPING : image_check_url ( VARCHAR ) 
    public void setImageCheckUrl( String imageCheckUrl ) {
        this.imageCheckUrl = imageCheckUrl;
    }
    public String getImageCheckUrl() {
        return this.imageCheckUrl;
    }

    //--- DATABASE MAPPING : image_uncheck_url ( VARCHAR ) 
    public void setImageUncheckUrl( String imageUncheckUrl ) {
        this.imageUncheckUrl = imageUncheckUrl;
    }
    public String getImageUncheckUrl() {
        return this.imageUncheckUrl;
    }

    //--- DATABASE MAPPING : type ( SMALLINT ) 
    public void setType( Short type ) {
        this.type = type;
    }
    public Short getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : is_show ( SMALLINT ) 
    public void setIsShow( Short isShow ) {
        this.isShow = isShow;
    }
    public Short getIsShow() {
        return this.isShow;
    }

    //--- DATABASE MAPPING : relate_category_id ( INT ) 
    public void setRelateCategoryId( Integer relateCategoryId ) {
        this.relateCategoryId = relateCategoryId;
    }
    public Integer getRelateCategoryId() {
        return this.relateCategoryId;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : status ( INT ) 
    public void setStatus( Integer status ) {
        this.status = status;
    }
    public Integer getStatus() {
        return this.status;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfPaymentHistory2( List<PaymentHistoryEntity> listOfPaymentHistory2 ) {
        this.listOfPaymentHistory2 = listOfPaymentHistory2;
    }
    public List<PaymentHistoryEntity> getListOfPaymentHistory2() {
        return this.listOfPaymentHistory2;
    }

    public void setListOfPaymentHistory( List<PaymentHistoryEntity> listOfPaymentHistory ) {
        this.listOfPaymentHistory = listOfPaymentHistory;
    }
    public List<PaymentHistoryEntity> getListOfPaymentHistory() {
        return this.listOfPaymentHistory;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(parentId);
        sb.append("|");
        sb.append(categoryName);
        sb.append("|");
        sb.append(decription);
        sb.append("|");
        sb.append(comment);
        sb.append("|");
        sb.append(imageCheckUrl);
        sb.append("|");
        sb.append(imageUncheckUrl);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(isShow);
        sb.append("|");
        sb.append(relateCategoryId);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(status);
        return sb.toString(); 
    } 

}
