/*
 * Created on 18 Apr 2017 ( Time 15:41:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "promotion_page"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="promotion_page", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PromotionPageEntity.countAll", query="SELECT COUNT(x) FROM PromotionPageEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class PromotionPageEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="logo_url", nullable=false, length=200)
    private String     logoUrl      ;

    @Column(name="logo_name", length=200)
    private String     logoName     ;

    @Column(name="background_url", nullable=false, length=200)
    private String     backgroundUrl ;

    @Column(name="background_name", nullable=false, length=200)
    private String     backgroundName ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="reserve_date")
    private Date       reserveDate  ;

    @Column(name="reserve_reason", length=200)
    private String     reserveReason ;

    @Column(name="is_show", nullable=false)
    private Integer    isShow       ;

    @Column(name="status", nullable=false)
    private Short      status       ;
    
    @Column(name="type", nullable=false)
    private Short      type       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

	// "businessId" (column "business_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="promotionPage", targetEntity=PromotionPageLinkEntity.class)
    private List<PromotionPageLinkEntity> listOfPromotionPageLink;

    @ManyToOne
    @JoinColumn(name="business_id", referencedColumnName="id")
    private BusinessEntity business    ;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PromotionPageEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : logo_url ( VARCHAR ) 
    
    public void setLogoUrl( String logoUrl ) {
        this.logoUrl = logoUrl;
    }
    public Short getType() {
		return type;
	}

	public void setType(Short type) {
		this.type = type;
	}

	public String getLogoUrl() {
        return this.logoUrl;
    }

    //--- DATABASE MAPPING : logo_name ( VARCHAR ) 
    public void setLogoName( String logoName ) {
        this.logoName = logoName;
    }
    public String getLogoName() {
        return this.logoName;
    }

    //--- DATABASE MAPPING : background_url ( VARCHAR ) 
    public void setBackgroundUrl( String backgroundUrl ) {
        this.backgroundUrl = backgroundUrl;
    }
    public String getBackgroundUrl() {
        return this.backgroundUrl;
    }

    //--- DATABASE MAPPING : background_name ( VARCHAR ) 
    public void setBackgroundName( String backgroundName ) {
        this.backgroundName = backgroundName;
    }
    public String getBackgroundName() {
        return this.backgroundName;
    }

    //--- DATABASE MAPPING : reserve_date ( DATETIME ) 
    public void setReserveDate( Date reserveDate ) {
        this.reserveDate = reserveDate;
    }
    public Date getReserveDate() {
        return this.reserveDate;
    }

    //--- DATABASE MAPPING : reserve_reason ( VARCHAR ) 
    public void setReserveReason( String reserveReason ) {
        this.reserveReason = reserveReason;
    }
    public String getReserveReason() {
        return this.reserveReason;
    }

    //--- DATABASE MAPPING : is_show ( INT ) 
    public void setIsShow( Integer isShow ) {
        this.isShow = isShow;
    }
    public Integer getIsShow() {
        return this.isShow;
    }

    //--- DATABASE MAPPING : status ( SMALLINT ) 
    public void setStatus( Short status ) {
        this.status = status;
    }
    public Short getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfPromotionPageLink( List<PromotionPageLinkEntity> listOfPromotionPageLink ) {
        this.listOfPromotionPageLink = listOfPromotionPageLink;
    }
    public List<PromotionPageLinkEntity> getListOfPromotionPageLink() {
        return this.listOfPromotionPageLink;
    }

    public void setBusiness( BusinessEntity business ) {
        this.business = business;
    }
    public BusinessEntity getBusiness() {
        return this.business;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(logoUrl);
        sb.append("|");
        sb.append(logoName);
        sb.append("|");
        sb.append(backgroundUrl);
        sb.append("|");
        sb.append(backgroundName);
        sb.append("|");
        sb.append(reserveDate);
        sb.append("|");
        sb.append(reserveReason);
        sb.append("|");
        sb.append(isShow);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
