/*
 * Created on 28 Jun 2017 ( Time 16:48:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserEntity.countAll", query="SELECT COUNT(x) FROM UserEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class UserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="status_active")
    private Short      statusActive ;

    @Column(name="username", nullable=false, length=100)
    private String     username     ;

    @Column(name="password", nullable=false, length=512)
    private String     password     ;

    @Column(name="password_temp", length=512)
    private String     passwordTemp ;

    @Column(name="nickname", length=200)
    private String     nickname     ;

    @Column(name="fullname", length=255)
    private String     fullname     ;

    @Column(name="gender", nullable=false)
    private Short      gender       ;

    @Temporal(TemporalType.DATE)
    @Column(name="day_of_birth")
    private Date       dayOfBirth   ;

    @Column(name="phone", length=200)
    private String     phone        ;

    @Column(name="email", length=255)
    private String     email        ;

    @Column(name="address", length=500)
    private String     address      ;

    @Column(name="token", length=300)
    private String     token        ;

    @Column(name="fcm_token", length=500)
    private String     fcmToken     ;

    @Column(name="push_fcm_token")
    private Integer    pushFcmToken ;

    @Column(name="os_name", length=100)
    private String     osName       ;

    @Column(name="os_version", length=50)
    private String     osVersion    ;

    @Column(name="app_vesion", length=50)
    private String     appVesion    ;

    @Column(name="device_id", length=100)
    private String     deviceId     ;

    @Column(name="device_version", length=50)
    private String     deviceVersion ;

    @Column(name="device_name", length=100)
    private String     deviceName   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="confirm_business_time")
    private Date       confirmBusinessTime ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_login")
    private Date       lastLogin    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="banned_last_time")
    private Date       bannedLastTime ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="expired_banned_time")
    private Date       expiredBannedTime ;

    @Column(name="banned_number")
    private Integer    bannedNumber ;

    @Column(name="charge_number")
    private Integer    chargeNumber ;

    @Column(name="test_psychological_number")
    private Integer    testPsychologicalNumber ;

    @Column(name="heart", nullable=false)
    private Integer    heart        ;

    @Column(name="voucher_number", nullable=false)
    private Integer    voucherNumber ;

    @Column(name="coin", nullable=false)
    private Integer    coin         ;

    @Column(name="online")
    private Short      online       ;

    @Column(name="setting_all", nullable=false)
    private Short      settingAll   ;

    @Column(name="reservation_notification", nullable=false)
    private Short      reservationNotification ;

    @Column(name="message_notification", nullable=false)
    private Short      messageNotification ;

    @Column(name="event_notice_notification", nullable=false)
    private Short      eventNoticeNotification ;

    @Column(name="iniquiry_notification", nullable=false)
    private Short      iniquiryNotification ;

    @Column(name="withdrawal_reason", length=500)
    private String     withdrawalReason ;

    @Column(name="type_withdrawal_reason")
    private Short      typeWithdrawalReason ;

    @Column(name="login_first")
    private Integer    loginFirst   ;

    @Column(name="is_foreign", nullable=false)
    private Short      isForeign    ;

    @Column(name="is_delete")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="withdrawal_date")
    private Date       withdrawalDate ;

    @Temporal(TemporalType.DATE)
    @Column(name="change_heart_date")
    private Date       changeHeartDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

	// "roleId" (column "role_id") is not defined by itself because used as FK in a link 
	// "businessSubId" (column "business_sub_id") is not defined by itself because used as FK in a link 
	// "appVesionId" (column "app_vesion_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CounselorTempEntity.class)
    private List<CounselorTempEntity> listOfCounselorTemp;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=BanAccountHistoryEntity.class)
    private List<BanAccountHistoryEntity> listOfBanAccountHistory;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=DeviceEntity.class)
    private List<DeviceEntity> listOfDevice;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=NotificationEntity.class)
    private List<NotificationEntity> listOfNotification;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=UserNotificationEntity.class)
    private List<UserNotificationEntity> listOfUserNotification;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=PaymentHistoryEntity.class)
    private List<PaymentHistoryEntity> listOfPaymentHistory;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=RequestUserPsychologicalEntity.class)
    private List<RequestUserPsychologicalEntity> listOfRequestUserPsychological;

    @ManyToOne
    @JoinColumn(name="app_vesion_id", referencedColumnName="id")
    private VersionAppEntity versionApp  ;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=PasswordHistoryEntity.class)
    private List<PasswordHistoryEntity> listOfPasswordHistory;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=ScheduleCounselorEntity.class)
    private List<ScheduleCounselorEntity> listOfScheduleCounselor;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CommentEntity.class)
    private List<CommentEntity> listOfComment;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=InquiryEntity.class)
    private List<InquiryEntity> listOfInquiry;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=BusinessEntity.class)
    private List<BusinessEntity> listOfBusiness;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=FaqEntity.class)
    private List<FaqEntity> listOfFaq   ;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CounselorEntity.class)
    private List<CounselorEntity> listOfCounselor;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CounselingCenterEntity.class)
    private List<CounselingCenterEntity> listOfCounselingCenter;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=UserBusinessEntity.class)
    private List<UserBusinessEntity> listOfUserBusiness;

    @ManyToOne
    @JoinColumn(name="role_id", referencedColumnName="id")
    private UserRoleEntity userRole    ;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=UserReceiveMessageEntity.class)
    private List<UserReceiveMessageEntity> listOfUserReceiveMessage;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CounselingSessionEntity.class)
    private List<CounselingSessionEntity> listOfCounselingSession;

    @ManyToOne
    @JoinColumn(name="business_sub_id", referencedColumnName="id")
    private BusinessSubEntity businessSub ;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=PushNotificationEntity.class)
    private List<PushNotificationEntity> listOfPushNotification;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=NoticeEntity.class)
    private List<NoticeEntity> listOfNotice;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=MessageEntity.class)
    private List<MessageEntity> listOfMessage;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=UserQuestionaireEntity.class)
    private List<UserQuestionaireEntity> listOfUserQuestionaire;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CounselingMemoEntity.class)
    private List<CounselingMemoEntity> listOfCounselingMemo;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=PaymentProfitEntity.class)
    private List<PaymentProfitEntity> listOfPaymentProfit;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : status_active ( SMALLINT UNSIGNED ) 
    public void setStatusActive( Short statusActive ) {
        this.statusActive = statusActive;
    }
    public Short getStatusActive() {
        return this.statusActive;
    }

    //--- DATABASE MAPPING : username ( VARCHAR ) 
    public void setUsername( String username ) {
        this.username = username;
    }
    public String getUsername() {
        return this.username;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : password_temp ( VARCHAR ) 
    public void setPasswordTemp( String passwordTemp ) {
        this.passwordTemp = passwordTemp;
    }
    public String getPasswordTemp() {
        return this.passwordTemp;
    }

    //--- DATABASE MAPPING : nickname ( VARCHAR ) 
    public void setNickname( String nickname ) {
        this.nickname = nickname;
    }
    public String getNickname() {
        return this.nickname;
    }

    //--- DATABASE MAPPING : fullname ( VARCHAR ) 
    public void setFullname( String fullname ) {
        this.fullname = fullname;
    }
    public String getFullname() {
        return this.fullname;
    }

    //--- DATABASE MAPPING : gender ( SMALLINT ) 
    public void setGender( Short gender ) {
        this.gender = gender;
    }
    public Short getGender() {
        return this.gender;
    }

    //--- DATABASE MAPPING : day_of_birth ( DATE ) 
    public void setDayOfBirth( Date dayOfBirth ) {
        this.dayOfBirth = dayOfBirth;
    }
    public Date getDayOfBirth() {
        return this.dayOfBirth;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : token ( VARCHAR ) 
    public void setToken( String token ) {
        this.token = token;
    }
    public String getToken() {
        return this.token;
    }

    //--- DATABASE MAPPING : fcm_token ( VARCHAR ) 
    public void setFcmToken( String fcmToken ) {
        this.fcmToken = fcmToken;
    }
    public String getFcmToken() {
        return this.fcmToken;
    }

    //--- DATABASE MAPPING : push_fcm_token ( INT ) 
    public void setPushFcmToken( Integer pushFcmToken ) {
        this.pushFcmToken = pushFcmToken;
    }
    public Integer getPushFcmToken() {
        return this.pushFcmToken;
    }

    //--- DATABASE MAPPING : os_name ( VARCHAR ) 
    public void setOsName( String osName ) {
        this.osName = osName;
    }
    public String getOsName() {
        return this.osName;
    }

    //--- DATABASE MAPPING : os_version ( VARCHAR ) 
    public void setOsVersion( String osVersion ) {
        this.osVersion = osVersion;
    }
    public String getOsVersion() {
        return this.osVersion;
    }

    //--- DATABASE MAPPING : app_vesion ( VARCHAR ) 
    public void setAppVesion( String appVesion ) {
        this.appVesion = appVesion;
    }
    public String getAppVesion() {
        return this.appVesion;
    }

    //--- DATABASE MAPPING : device_id ( VARCHAR ) 
    public void setDeviceId( String deviceId ) {
        this.deviceId = deviceId;
    }
    public String getDeviceId() {
        return this.deviceId;
    }

    //--- DATABASE MAPPING : device_version ( VARCHAR ) 
    public void setDeviceVersion( String deviceVersion ) {
        this.deviceVersion = deviceVersion;
    }
    public String getDeviceVersion() {
        return this.deviceVersion;
    }

    //--- DATABASE MAPPING : device_name ( VARCHAR ) 
    public void setDeviceName( String deviceName ) {
        this.deviceName = deviceName;
    }
    public String getDeviceName() {
        return this.deviceName;
    }

    //--- DATABASE MAPPING : confirm_business_time ( DATETIME ) 
    public void setConfirmBusinessTime( Date confirmBusinessTime ) {
        this.confirmBusinessTime = confirmBusinessTime;
    }
    public Date getConfirmBusinessTime() {
        return this.confirmBusinessTime;
    }

    //--- DATABASE MAPPING : last_login ( DATETIME ) 
    public void setLastLogin( Date lastLogin ) {
        this.lastLogin = lastLogin;
    }
    public Date getLastLogin() {
        return this.lastLogin;
    }

    //--- DATABASE MAPPING : banned_last_time ( DATETIME ) 
    public void setBannedLastTime( Date bannedLastTime ) {
        this.bannedLastTime = bannedLastTime;
    }
    public Date getBannedLastTime() {
        return this.bannedLastTime;
    }

    //--- DATABASE MAPPING : expired_banned_time ( DATETIME ) 
    public void setExpiredBannedTime( Date expiredBannedTime ) {
        this.expiredBannedTime = expiredBannedTime;
    }
    public Date getExpiredBannedTime() {
        return this.expiredBannedTime;
    }

    //--- DATABASE MAPPING : banned_number ( INT ) 
    public void setBannedNumber( Integer bannedNumber ) {
        this.bannedNumber = bannedNumber;
    }
    public Integer getBannedNumber() {
        return this.bannedNumber;
    }

    //--- DATABASE MAPPING : charge_number ( INT ) 
    public void setChargeNumber( Integer chargeNumber ) {
        this.chargeNumber = chargeNumber;
    }
    public Integer getChargeNumber() {
        return this.chargeNumber;
    }

    //--- DATABASE MAPPING : test_psychological_number ( INT ) 
    public void setTestPsychologicalNumber( Integer testPsychologicalNumber ) {
        this.testPsychologicalNumber = testPsychologicalNumber;
    }
    public Integer getTestPsychologicalNumber() {
        return this.testPsychologicalNumber;
    }

    //--- DATABASE MAPPING : heart ( INT ) 
    public void setHeart( Integer heart ) {
        this.heart = heart;
    }
    public Integer getHeart() {
        return this.heart;
    }

    //--- DATABASE MAPPING : voucher_number ( INT ) 
    public void setVoucherNumber( Integer voucherNumber ) {
        this.voucherNumber = voucherNumber;
    }
    public Integer getVoucherNumber() {
        return this.voucherNumber;
    }

    //--- DATABASE MAPPING : coin ( INT ) 
    public void setCoin( Integer coin ) {
        this.coin = coin;
    }
    public Integer getCoin() {
        return this.coin;
    }

    //--- DATABASE MAPPING : online ( SMALLINT ) 
    public void setOnline( Short online ) {
        this.online = online;
    }
    public Short getOnline() {
        return this.online;
    }

    //--- DATABASE MAPPING : setting_all ( SMALLINT ) 
    public void setSettingAll( Short settingAll ) {
        this.settingAll = settingAll;
    }
    public Short getSettingAll() {
        return this.settingAll;
    }

    //--- DATABASE MAPPING : reservation_notification ( SMALLINT ) 
    public void setReservationNotification( Short reservationNotification ) {
        this.reservationNotification = reservationNotification;
    }
    public Short getReservationNotification() {
        return this.reservationNotification;
    }

    //--- DATABASE MAPPING : message_notification ( SMALLINT ) 
    public void setMessageNotification( Short messageNotification ) {
        this.messageNotification = messageNotification;
    }
    public Short getMessageNotification() {
        return this.messageNotification;
    }

    //--- DATABASE MAPPING : event_notice_notification ( SMALLINT ) 
    public void setEventNoticeNotification( Short eventNoticeNotification ) {
        this.eventNoticeNotification = eventNoticeNotification;
    }
    public Short getEventNoticeNotification() {
        return this.eventNoticeNotification;
    }

    //--- DATABASE MAPPING : iniquiry_notification ( SMALLINT ) 
    public void setIniquiryNotification( Short iniquiryNotification ) {
        this.iniquiryNotification = iniquiryNotification;
    }
    public Short getIniquiryNotification() {
        return this.iniquiryNotification;
    }

    //--- DATABASE MAPPING : withdrawal_reason ( VARCHAR ) 
    public void setWithdrawalReason( String withdrawalReason ) {
        this.withdrawalReason = withdrawalReason;
    }
    public String getWithdrawalReason() {
        return this.withdrawalReason;
    }

    //--- DATABASE MAPPING : type_withdrawal_reason ( SMALLINT ) 
    public void setTypeWithdrawalReason( Short typeWithdrawalReason ) {
        this.typeWithdrawalReason = typeWithdrawalReason;
    }
    public Short getTypeWithdrawalReason() {
        return this.typeWithdrawalReason;
    }

    //--- DATABASE MAPPING : login_first ( INT ) 
    public void setLoginFirst( Integer loginFirst ) {
        this.loginFirst = loginFirst;
    }
    public Integer getLoginFirst() {
        return this.loginFirst;
    }

    //--- DATABASE MAPPING : is_foreign ( SMALLINT ) 
    public void setIsForeign( Short isForeign ) {
        this.isForeign = isForeign;
    }
    public Short getIsForeign() {
        return this.isForeign;
    }

    //--- DATABASE MAPPING : is_delete ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : withdrawal_date ( DATETIME ) 
    public void setWithdrawalDate( Date withdrawalDate ) {
        this.withdrawalDate = withdrawalDate;
    }
    public Date getWithdrawalDate() {
        return this.withdrawalDate;
    }

    //--- DATABASE MAPPING : change_heart_date ( DATE ) 
    public void setChangeHeartDate( Date changeHeartDate ) {
        this.changeHeartDate = changeHeartDate;
    }
    public Date getChangeHeartDate() {
        return this.changeHeartDate;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfCounselorTemp( List<CounselorTempEntity> listOfCounselorTemp ) {
        this.listOfCounselorTemp = listOfCounselorTemp;
    }
    public List<CounselorTempEntity> getListOfCounselorTemp() {
        return this.listOfCounselorTemp;
    }

    public void setListOfBanAccountHistory( List<BanAccountHistoryEntity> listOfBanAccountHistory ) {
        this.listOfBanAccountHistory = listOfBanAccountHistory;
    }
    public List<BanAccountHistoryEntity> getListOfBanAccountHistory() {
        return this.listOfBanAccountHistory;
    }

    public void setListOfDevice( List<DeviceEntity> listOfDevice ) {
        this.listOfDevice = listOfDevice;
    }
    public List<DeviceEntity> getListOfDevice() {
        return this.listOfDevice;
    }

    public void setListOfNotification( List<NotificationEntity> listOfNotification ) {
        this.listOfNotification = listOfNotification;
    }
    public List<NotificationEntity> getListOfNotification() {
        return this.listOfNotification;
    }

    public void setListOfUserNotification( List<UserNotificationEntity> listOfUserNotification ) {
        this.listOfUserNotification = listOfUserNotification;
    }
    public List<UserNotificationEntity> getListOfUserNotification() {
        return this.listOfUserNotification;
    }

    public void setListOfPaymentHistory( List<PaymentHistoryEntity> listOfPaymentHistory ) {
        this.listOfPaymentHistory = listOfPaymentHistory;
    }
    public List<PaymentHistoryEntity> getListOfPaymentHistory() {
        return this.listOfPaymentHistory;
    }

    public void setListOfRequestUserPsychological( List<RequestUserPsychologicalEntity> listOfRequestUserPsychological ) {
        this.listOfRequestUserPsychological = listOfRequestUserPsychological;
    }
    public List<RequestUserPsychologicalEntity> getListOfRequestUserPsychological() {
        return this.listOfRequestUserPsychological;
    }

    public void setVersionApp( VersionAppEntity versionApp ) {
        this.versionApp = versionApp;
    }
    public VersionAppEntity getVersionApp() {
        return this.versionApp;
    }

    public void setListOfPasswordHistory( List<PasswordHistoryEntity> listOfPasswordHistory ) {
        this.listOfPasswordHistory = listOfPasswordHistory;
    }
    public List<PasswordHistoryEntity> getListOfPasswordHistory() {
        return this.listOfPasswordHistory;
    }

    public void setListOfScheduleCounselor( List<ScheduleCounselorEntity> listOfScheduleCounselor ) {
        this.listOfScheduleCounselor = listOfScheduleCounselor;
    }
    public List<ScheduleCounselorEntity> getListOfScheduleCounselor() {
        return this.listOfScheduleCounselor;
    }

    public void setListOfComment( List<CommentEntity> listOfComment ) {
        this.listOfComment = listOfComment;
    }
    public List<CommentEntity> getListOfComment() {
        return this.listOfComment;
    }

    public void setListOfInquiry( List<InquiryEntity> listOfInquiry ) {
        this.listOfInquiry = listOfInquiry;
    }
    public List<InquiryEntity> getListOfInquiry() {
        return this.listOfInquiry;
    }

    public void setListOfBusiness( List<BusinessEntity> listOfBusiness ) {
        this.listOfBusiness = listOfBusiness;
    }
    public List<BusinessEntity> getListOfBusiness() {
        return this.listOfBusiness;
    }

    public void setListOfFaq( List<FaqEntity> listOfFaq ) {
        this.listOfFaq = listOfFaq;
    }
    public List<FaqEntity> getListOfFaq() {
        return this.listOfFaq;
    }

    public void setListOfCounselor( List<CounselorEntity> listOfCounselor ) {
        this.listOfCounselor = listOfCounselor;
    }
    public List<CounselorEntity> getListOfCounselor() {
        return this.listOfCounselor;
    }

    public void setListOfCounselingCenter( List<CounselingCenterEntity> listOfCounselingCenter ) {
        this.listOfCounselingCenter = listOfCounselingCenter;
    }
    public List<CounselingCenterEntity> getListOfCounselingCenter() {
        return this.listOfCounselingCenter;
    }

    public void setListOfUserBusiness( List<UserBusinessEntity> listOfUserBusiness ) {
        this.listOfUserBusiness = listOfUserBusiness;
    }
    public List<UserBusinessEntity> getListOfUserBusiness() {
        return this.listOfUserBusiness;
    }

    public void setUserRole( UserRoleEntity userRole ) {
        this.userRole = userRole;
    }
    public UserRoleEntity getUserRole() {
        return this.userRole;
    }

    public void setListOfUserReceiveMessage( List<UserReceiveMessageEntity> listOfUserReceiveMessage ) {
        this.listOfUserReceiveMessage = listOfUserReceiveMessage;
    }
    public List<UserReceiveMessageEntity> getListOfUserReceiveMessage() {
        return this.listOfUserReceiveMessage;
    }

    public void setListOfCounselingSession( List<CounselingSessionEntity> listOfCounselingSession ) {
        this.listOfCounselingSession = listOfCounselingSession;
    }
    public List<CounselingSessionEntity> getListOfCounselingSession() {
        return this.listOfCounselingSession;
    }

    public void setBusinessSub( BusinessSubEntity businessSub ) {
        this.businessSub = businessSub;
    }
    public BusinessSubEntity getBusinessSub() {
        return this.businessSub;
    }

    public void setListOfPushNotification( List<PushNotificationEntity> listOfPushNotification ) {
        this.listOfPushNotification = listOfPushNotification;
    }
    public List<PushNotificationEntity> getListOfPushNotification() {
        return this.listOfPushNotification;
    }

    public void setListOfNotice( List<NoticeEntity> listOfNotice ) {
        this.listOfNotice = listOfNotice;
    }
    public List<NoticeEntity> getListOfNotice() {
        return this.listOfNotice;
    }

    public void setListOfMessage( List<MessageEntity> listOfMessage ) {
        this.listOfMessage = listOfMessage;
    }
    public List<MessageEntity> getListOfMessage() {
        return this.listOfMessage;
    }

    public void setListOfUserQuestionaire( List<UserQuestionaireEntity> listOfUserQuestionaire ) {
        this.listOfUserQuestionaire = listOfUserQuestionaire;
    }
    public List<UserQuestionaireEntity> getListOfUserQuestionaire() {
        return this.listOfUserQuestionaire;
    }

    public void setListOfCounselingMemo( List<CounselingMemoEntity> listOfCounselingMemo ) {
        this.listOfCounselingMemo = listOfCounselingMemo;
    }
    public List<CounselingMemoEntity> getListOfCounselingMemo() {
        return this.listOfCounselingMemo;
    }

    public void setListOfPaymentProfit( List<PaymentProfitEntity> listOfPaymentProfit ) {
        this.listOfPaymentProfit = listOfPaymentProfit;
    }
    public List<PaymentProfitEntity> getListOfPaymentProfit() {
        return this.listOfPaymentProfit;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(statusActive);
        sb.append("|");
        sb.append(username);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(passwordTemp);
        sb.append("|");
        sb.append(nickname);
        sb.append("|");
        sb.append(fullname);
        sb.append("|");
        sb.append(gender);
        sb.append("|");
        sb.append(dayOfBirth);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(token);
        sb.append("|");
        sb.append(fcmToken);
        sb.append("|");
        sb.append(pushFcmToken);
        sb.append("|");
        sb.append(osName);
        sb.append("|");
        sb.append(osVersion);
        sb.append("|");
        sb.append(appVesion);
        sb.append("|");
        sb.append(deviceId);
        sb.append("|");
        sb.append(deviceVersion);
        sb.append("|");
        sb.append(deviceName);
        sb.append("|");
        sb.append(confirmBusinessTime);
        sb.append("|");
        sb.append(lastLogin);
        sb.append("|");
        sb.append(bannedLastTime);
        sb.append("|");
        sb.append(expiredBannedTime);
        sb.append("|");
        sb.append(bannedNumber);
        sb.append("|");
        sb.append(chargeNumber);
        sb.append("|");
        sb.append(testPsychologicalNumber);
        sb.append("|");
        sb.append(heart);
        sb.append("|");
        sb.append(voucherNumber);
        sb.append("|");
        sb.append(coin);
        sb.append("|");
        sb.append(online);
        sb.append("|");
        sb.append(settingAll);
        sb.append("|");
        sb.append(reservationNotification);
        sb.append("|");
        sb.append(messageNotification);
        sb.append("|");
        sb.append(eventNoticeNotification);
        sb.append("|");
        sb.append(iniquiryNotification);
        sb.append("|");
        sb.append(withdrawalReason);
        sb.append("|");
        sb.append(typeWithdrawalReason);
        sb.append("|");
        sb.append(loginFirst);
        sb.append("|");
        sb.append(isForeign);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(withdrawalDate);
        sb.append("|");
        sb.append(changeHeartDate);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
