/*
 * Created on 18 Apr 2017 ( Time 09:18:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Persistent class for entity stored in table "counselor_schedule_setting"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="counselor_schedule_setting", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CounselorScheduleSettingEntity.countAll", query="SELECT COUNT(x) FROM CounselorScheduleSettingEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class CounselorScheduleSettingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="reservation_date")
    private Date       reservationDate ;

    @Column(name="reservation_time", length=255)
    private String     reservationTime ;

    @Column(name="online_time", length=255)
    private String     onlineTime   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

	// "counselorId" (column "counselor_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="counselor_id", referencedColumnName="id")
    private CounselorEntity counselor   ;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CounselorScheduleSettingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : reservation_date ( DATE ) 
    public void setReservationDate( Date reservationDate ) {
        this.reservationDate = reservationDate;
    }
    public Date getReservationDate() {
        return this.reservationDate;
    }

    //--- DATABASE MAPPING : reservation_time ( VARCHAR ) 
    public void setReservationTime( String reservationTime ) {
        this.reservationTime = reservationTime;
    }
    public String getReservationTime() {
        return this.reservationTime;
    }

    //--- DATABASE MAPPING : online_time ( VARCHAR ) 
    public void setOnlineTime( String onlineTime ) {
        this.onlineTime = onlineTime;
    }
    public String getOnlineTime() {
        return this.onlineTime;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCounselor( CounselorEntity counselor ) {
        this.counselor = counselor;
    }
    public CounselorEntity getCounselor() {
        return this.counselor;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(reservationDate);
        sb.append("|");
        sb.append(reservationTime);
        sb.append("|");
        sb.append(onlineTime);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
