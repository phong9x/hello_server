/*
 * Created on 28 Jun 2017 ( Time 13:46:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "voucher"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="voucher", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="VoucherEntity.countAll", query="SELECT COUNT(x) FROM VoucherEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class VoucherEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", length=200)
    private String     name         ;

    @Column(name="number")
    private Integer    number       ;

    @Column(name="fee")
    private Integer    fee          ;

    @Column(name="heart_number")
    private Integer    heartNumber  ;

    @Column(name="content")
    private String     content      ;

    @Temporal(TemporalType.DATE)
    @Column(name="from_time")
    private Date       fromTime     ;

    @Temporal(TemporalType.DATE)
    @Column(name="to_time")
    private Date       toTime       ;

    @Column(name="date_number")
    private Integer    dateNumber   ;

    @Column(name="type_time")
    private Short      typeTime     ;

    @Column(name="type_voucher")
    private Short      typeVoucher  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Column(name="counseling_time_type", nullable=false)
    private Short      counselingTimeType ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="used")
    private Integer    used         ;

	// "businessSubId" (column "business_sub_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="voucher", targetEntity=VoucherUserEntity.class)
    private List<VoucherUserEntity> listOfVoucherUser;

    @ManyToOne
    @JoinColumn(name="business_sub_id", referencedColumnName="id")
    private BusinessSubEntity businessSub ;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public VoucherEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : number ( INT ) 
    public void setNumber( Integer number ) {
        this.number = number;
    }
    public Integer getNumber() {
        return this.number;
    }

    //--- DATABASE MAPPING : fee ( INT ) 
    public void setFee( Integer fee ) {
        this.fee = fee;
    }
    public Integer getFee() {
        return this.fee;
    }

    //--- DATABASE MAPPING : heart_number ( INT ) 
    public void setHeartNumber( Integer heartNumber ) {
        this.heartNumber = heartNumber;
    }
    public Integer getHeartNumber() {
        return this.heartNumber;
    }

    //--- DATABASE MAPPING : content ( TEXT ) 
    public void setContent( String content ) {
        this.content = content;
    }
    public String getContent() {
        return this.content;
    }

    //--- DATABASE MAPPING : from_time ( DATE ) 
    public void setFromTime( Date fromTime ) {
        this.fromTime = fromTime;
    }
    public Date getFromTime() {
        return this.fromTime;
    }

    //--- DATABASE MAPPING : to_time ( DATE ) 
    public void setToTime( Date toTime ) {
        this.toTime = toTime;
    }
    public Date getToTime() {
        return this.toTime;
    }

    //--- DATABASE MAPPING : date_number ( INT ) 
    public void setDateNumber( Integer dateNumber ) {
        this.dateNumber = dateNumber;
    }
    public Integer getDateNumber() {
        return this.dateNumber;
    }

    //--- DATABASE MAPPING : type_time ( SMALLINT ) 
    public void setTypeTime( Short typeTime ) {
        this.typeTime = typeTime;
    }
    public Short getTypeTime() {
        return this.typeTime;
    }

    //--- DATABASE MAPPING : type_voucher ( SMALLINT ) 
    public void setTypeVoucher( Short typeVoucher ) {
        this.typeVoucher = typeVoucher;
    }
    public Short getTypeVoucher() {
        return this.typeVoucher;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : counseling_time_type ( SMALLINT ) 
    public void setCounselingTimeType( Short counselingTimeType ) {
        this.counselingTimeType = counselingTimeType;
    }
    public Short getCounselingTimeType() {
        return this.counselingTimeType;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : used ( INT ) 
    public void setUsed( Integer used ) {
        this.used = used;
    }
    public Integer getUsed() {
        return this.used;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfVoucherUser( List<VoucherUserEntity> listOfVoucherUser ) {
        this.listOfVoucherUser = listOfVoucherUser;
    }
    public List<VoucherUserEntity> getListOfVoucherUser() {
        return this.listOfVoucherUser;
    }

    public void setBusinessSub( BusinessSubEntity businessSub ) {
        this.businessSub = businessSub;
    }
    public BusinessSubEntity getBusinessSub() {
        return this.businessSub;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(number);
        sb.append("|");
        sb.append(fee);
        sb.append("|");
        sb.append(heartNumber);
        // attribute 'content' not usable (type = String Long Text)
        sb.append("|");
        sb.append(fromTime);
        sb.append("|");
        sb.append(toTime);
        sb.append("|");
        sb.append(dateNumber);
        sb.append("|");
        sb.append(typeTime);
        sb.append("|");
        sb.append(typeVoucher);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(counselingTimeType);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(used);
        return sb.toString(); 
    } 

}
