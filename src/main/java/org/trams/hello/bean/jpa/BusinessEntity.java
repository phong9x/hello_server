/*
 * Created on 8 May 2017 ( Time 11:45:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "business"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="business", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="BusinessEntity.countAll", query="SELECT COUNT(x) FROM BusinessEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class BusinessEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="business_no", nullable=false, length=100)
    private String     businessNo   ;

    @Column(name="business_name", nullable=false, length=200)
    private String     businessName ;

    @Column(name="business_number", length=100)
    private String     businessNumber ;

    @Column(name="business_type", nullable=false)
    private Short      businessType ;

    @Column(name="business_phone", length=50)
    private String     businessPhone ;

    @Column(name="represent_position", length=50)
    private String     representPosition ;

    @Column(name="business_email", length=300)
    private String     businessEmail ;

    @Column(name="sub_business_active")
    private Integer    subBusinessActive ;

    @Column(name="total_sub_business")
    private Integer    totalSubBusiness ;

    @Column(name="total_counseling")
    private Integer    totalCounseling ;

    @Column(name="total_member")
    private Integer    totalMember  ;

    @Column(name="total_fee_counseling")
    private Integer    totalFeeCounseling ;

    @Column(name="parent_business_id")
    private Integer    parentBusinessId ;

    @Column(name="year_manager")
    private Integer    yearManager  ;

    @Column(name="payment_method_id")
    private Integer    paymentMethodId ;

    @Column(name="payment_method_name", length=100)
    private String     paymentMethodName ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="register_date", nullable=false)
    private Date       registerDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="begin_contract_date")
    private Date       beginContractDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="end_contract_date")
    private Date       endContractDate ;

    @Column(name="contract_status", nullable=false)
    private Short      contractStatus ;

    @Column(name="is_delete")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="business", targetEntity=NoticeEntity.class)
    private List<NoticeEntity> listOfNotice;

	@JsonIgnore
    @OneToMany(mappedBy="business", targetEntity=BusinessSubEntity.class)
    private List<BusinessSubEntity> listOfBusinessSub;

	@JsonIgnore
    @OneToMany(mappedBy="business", targetEntity=PromotionPageEntity.class)
    private List<PromotionPageEntity> listOfPromotionPage;

    @ManyToOne
    @JoinColumn(name="id", referencedColumnName="id", insertable=false, updatable=false)
    private UserEntity user        ;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public BusinessEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : business_no ( VARCHAR ) 
    public void setBusinessNo( String businessNo ) {
        this.businessNo = businessNo;
    }
    public String getBusinessNo() {
        return this.businessNo;
    }

    //--- DATABASE MAPPING : business_name ( VARCHAR ) 
    public void setBusinessName( String businessName ) {
        this.businessName = businessName;
    }
    public String getBusinessName() {
        return this.businessName;
    }

    //--- DATABASE MAPPING : business_number ( VARCHAR ) 
    public void setBusinessNumber( String businessNumber ) {
        this.businessNumber = businessNumber;
    }
    public String getBusinessNumber() {
        return this.businessNumber;
    }

    //--- DATABASE MAPPING : business_type ( SMALLINT UNSIGNED ) 
    public void setBusinessType( Short businessType ) {
        this.businessType = businessType;
    }
    public Short getBusinessType() {
        return this.businessType;
    }

    //--- DATABASE MAPPING : business_phone ( VARCHAR ) 
    public void setBusinessPhone( String businessPhone ) {
        this.businessPhone = businessPhone;
    }
    public String getBusinessPhone() {
        return this.businessPhone;
    }

    //--- DATABASE MAPPING : represent_position ( VARCHAR ) 
    public void setRepresentPosition( String representPosition ) {
        this.representPosition = representPosition;
    }
    public String getRepresentPosition() {
        return this.representPosition;
    }

    //--- DATABASE MAPPING : business_email ( VARCHAR ) 
    public void setBusinessEmail( String businessEmail ) {
        this.businessEmail = businessEmail;
    }
    public String getBusinessEmail() {
        return this.businessEmail;
    }

    //--- DATABASE MAPPING : sub_business_active ( INT ) 
    public void setSubBusinessActive( Integer subBusinessActive ) {
        this.subBusinessActive = subBusinessActive;
    }
    public Integer getSubBusinessActive() {
        return this.subBusinessActive;
    }

    //--- DATABASE MAPPING : total_sub_business ( INT ) 
    public void setTotalSubBusiness( Integer totalSubBusiness ) {
        this.totalSubBusiness = totalSubBusiness;
    }
    public Integer getTotalSubBusiness() {
        return this.totalSubBusiness;
    }

    //--- DATABASE MAPPING : total_counseling ( INT ) 
    public void setTotalCounseling( Integer totalCounseling ) {
        this.totalCounseling = totalCounseling;
    }
    public Integer getTotalCounseling() {
        return this.totalCounseling;
    }

    //--- DATABASE MAPPING : total_member ( INT ) 
    public void setTotalMember( Integer totalMember ) {
        this.totalMember = totalMember;
    }
    public Integer getTotalMember() {
        return this.totalMember;
    }

    //--- DATABASE MAPPING : total_fee_counseling ( INT ) 
    public void setTotalFeeCounseling( Integer totalFeeCounseling ) {
        this.totalFeeCounseling = totalFeeCounseling;
    }
    public Integer getTotalFeeCounseling() {
        return this.totalFeeCounseling;
    }

    //--- DATABASE MAPPING : parent_business_id ( INT ) 
    public void setParentBusinessId( Integer parentBusinessId ) {
        this.parentBusinessId = parentBusinessId;
    }
    public Integer getParentBusinessId() {
        return this.parentBusinessId;
    }

    //--- DATABASE MAPPING : year_manager ( INT ) 
    public void setYearManager( Integer yearManager ) {
        this.yearManager = yearManager;
    }
    public Integer getYearManager() {
        return this.yearManager;
    }

    //--- DATABASE MAPPING : payment_method_id ( INT ) 
    public void setPaymentMethodId( Integer paymentMethodId ) {
        this.paymentMethodId = paymentMethodId;
    }
    public Integer getPaymentMethodId() {
        return this.paymentMethodId;
    }

    //--- DATABASE MAPPING : payment_method_name ( VARCHAR ) 
    public void setPaymentMethodName( String paymentMethodName ) {
        this.paymentMethodName = paymentMethodName;
    }
    public String getPaymentMethodName() {
        return this.paymentMethodName;
    }

    //--- DATABASE MAPPING : register_date ( DATETIME ) 
    public void setRegisterDate( Date registerDate ) {
        this.registerDate = registerDate;
    }
    public Date getRegisterDate() {
        return this.registerDate;
    }

    //--- DATABASE MAPPING : begin_contract_date ( DATETIME ) 
    public void setBeginContractDate( Date beginContractDate ) {
        this.beginContractDate = beginContractDate;
    }
    public Date getBeginContractDate() {
        return this.beginContractDate;
    }

    //--- DATABASE MAPPING : end_contract_date ( DATETIME ) 
    public void setEndContractDate( Date endContractDate ) {
        this.endContractDate = endContractDate;
    }
    public Date getEndContractDate() {
        return this.endContractDate;
    }

    //--- DATABASE MAPPING : contract_status ( SMALLINT ) 
    public void setContractStatus( Short contractStatus ) {
        this.contractStatus = contractStatus;
    }
    public Short getContractStatus() {
        return this.contractStatus;
    }

    //--- DATABASE MAPPING : is_delete ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfNotice( List<NoticeEntity> listOfNotice ) {
        this.listOfNotice = listOfNotice;
    }
    public List<NoticeEntity> getListOfNotice() {
        return this.listOfNotice;
    }

    public void setListOfBusinessSub( List<BusinessSubEntity> listOfBusinessSub ) {
        this.listOfBusinessSub = listOfBusinessSub;
    }
    public List<BusinessSubEntity> getListOfBusinessSub() {
        return this.listOfBusinessSub;
    }

    public void setListOfPromotionPage( List<PromotionPageEntity> listOfPromotionPage ) {
        this.listOfPromotionPage = listOfPromotionPage;
    }
    public List<PromotionPageEntity> getListOfPromotionPage() {
        return this.listOfPromotionPage;
    }

    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(businessNo);
        sb.append("|");
        sb.append(businessName);
        sb.append("|");
        sb.append(businessNumber);
        sb.append("|");
        sb.append(businessType);
        sb.append("|");
        sb.append(businessPhone);
        sb.append("|");
        sb.append(representPosition);
        sb.append("|");
        sb.append(businessEmail);
        sb.append("|");
        sb.append(subBusinessActive);
        sb.append("|");
        sb.append(totalSubBusiness);
        sb.append("|");
        sb.append(totalCounseling);
        sb.append("|");
        sb.append(totalMember);
        sb.append("|");
        sb.append(totalFeeCounseling);
        sb.append("|");
        sb.append(parentBusinessId);
        sb.append("|");
        sb.append(yearManager);
        sb.append("|");
        sb.append(paymentMethodId);
        sb.append("|");
        sb.append(paymentMethodName);
        sb.append("|");
        sb.append(registerDate);
        sb.append("|");
        sb.append(beginContractDate);
        sb.append("|");
        sb.append(endContractDate);
        sb.append("|");
        sb.append(contractStatus);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
