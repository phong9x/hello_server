/*
 * Created on 29 Apr 2017 ( Time 11:01:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key  


package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Persistent class for entity stored in table "counselor_field_temp"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="counselor_field_temp", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CounselorFieldTempEntity.countAll", query="SELECT COUNT(x) FROM CounselorFieldTempEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class CounselorFieldTempEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private CounselorFieldTempEntityKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date", nullable=false)
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date", nullable=false)
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="counselor_temp_id", referencedColumnName="id", insertable=false, updatable=false)
    private CounselorTempEntity counselorTemp;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CounselorFieldTempEntity() {
		super();
		this.compositePrimaryKey = new CounselorFieldTempEntityKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setCounselorTempId( Integer counselorTempId ) {
        this.compositePrimaryKey.setCounselorTempId( counselorTempId ) ;
    }
    public Integer getCounselorTempId() {
        return this.compositePrimaryKey.getCounselorTempId() ;
    }
    public void setCounselorFieldId( Integer counselorFieldId ) {
        this.compositePrimaryKey.setCounselorFieldId( counselorFieldId ) ;
    }
    public Integer getCounselorFieldId() {
        return this.compositePrimaryKey.getCounselorFieldId() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCounselorTemp( CounselorTempEntity counselorTemp ) {
        this.counselorTemp = counselorTemp;
    }
    public CounselorTempEntity getCounselorTemp() {
        return this.counselorTemp;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" ); 
        }  
        sb.append("]:"); 
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
