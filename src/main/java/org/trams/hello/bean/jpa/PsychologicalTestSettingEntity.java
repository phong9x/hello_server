/*
 * Created on 29 Apr 2017 ( Time 18:50:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.hello.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "psychological_test_setting"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="psychological_test_setting", catalog="hello" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PsychologicalTestSettingEntity.countAll", query="SELECT COUNT(x) FROM PsychologicalTestSettingEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class PsychologicalTestSettingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="company_name", nullable=false, length=50)
    private String     companyName  ;

    @Column(name="test_name", nullable=false, length=100)
    private String     testName     ;

    @Column(name="url", nullable=false, length=300)
    private String     url          ;

    @Column(name="fee", nullable=false)
    private Integer    fee          ;

    @Column(name="is_show", nullable=false)
    private Short      isShow       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="type_company")
    private Short      typeCompany  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="psychologicalTestSetting", targetEntity=UserPsychologicalEntity.class)
    private List<UserPsychologicalEntity> listOfUserPsychological;



    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PsychologicalTestSettingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : company_name ( VARCHAR ) 
    public void setCompanyName( String companyName ) {
        this.companyName = companyName;
    }
    public String getCompanyName() {
        return this.companyName;
    }

    //--- DATABASE MAPPING : test_name ( VARCHAR ) 
    public void setTestName( String testName ) {
        this.testName = testName;
    }
    public String getTestName() {
        return this.testName;
    }

    //--- DATABASE MAPPING : url ( VARCHAR ) 
    public void setUrl( String url ) {
        this.url = url;
    }
    public String getUrl() {
        return this.url;
    }

    //--- DATABASE MAPPING : fee ( INT ) 
    public void setFee( Integer fee ) {
        this.fee = fee;
    }
    public Integer getFee() {
        return this.fee;
    }

    //--- DATABASE MAPPING : is_show ( SMALLINT ) 
    public void setIsShow( Short isShow ) {
        this.isShow = isShow;
    }
    public Short getIsShow() {
        return this.isShow;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : type_company ( SMALLINT ) 
    public void setTypeCompany( Short typeCompany ) {
        this.typeCompany = typeCompany;
    }
    public Short getTypeCompany() {
        return this.typeCompany;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfUserPsychological( List<UserPsychologicalEntity> listOfUserPsychological ) {
        this.listOfUserPsychological = listOfUserPsychological;
    }
    public List<UserPsychologicalEntity> getListOfUserPsychological() {
        return this.listOfUserPsychological;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(companyName);
        sb.append("|");
        sb.append(testName);
        sb.append("|");
        sb.append(url);
        sb.append("|");
        sb.append(fee);
        sb.append("|");
        sb.append(isShow);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(typeCompany);
        return sb.toString(); 
    } 

}
